/**
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse20012ApplicationInformation', 'model/InlineResponse20012BuyerInformation', 'model/InlineResponse20012ClientReferenceInformation', 'model/InlineResponse20012ConsumerAuthenticationInformation', 'model/InlineResponse20012DeviceInformation', 'model/InlineResponse20012ErrorInformation', 'model/InlineResponse20012FraudMarkingInformation', 'model/InlineResponse20012InstallmentInformation', 'model/InlineResponse20012MerchantDefinedInformation', 'model/InlineResponse20012MerchantInformation', 'model/InlineResponse20012OrderInformation', 'model/InlineResponse20012PaymentInformation', 'model/InlineResponse20012PointOfSaleInformation', 'model/InlineResponse20012ProcessingInformation', 'model/InlineResponse20012ProcessorInformation', 'model/InlineResponse20012RiskInformation', 'model/InlineResponse20012SenderInformation', 'model/InlineResponse2011Links'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse20012ApplicationInformation'), require('./InlineResponse20012BuyerInformation'), require('./InlineResponse20012ClientReferenceInformation'), require('./InlineResponse20012ConsumerAuthenticationInformation'), require('./InlineResponse20012DeviceInformation'), require('./InlineResponse20012ErrorInformation'), require('./InlineResponse20012FraudMarkingInformation'), require('./InlineResponse20012InstallmentInformation'), require('./InlineResponse20012MerchantDefinedInformation'), require('./InlineResponse20012MerchantInformation'), require('./InlineResponse20012OrderInformation'), require('./InlineResponse20012PaymentInformation'), require('./InlineResponse20012PointOfSaleInformation'), require('./InlineResponse20012ProcessingInformation'), require('./InlineResponse20012ProcessorInformation'), require('./InlineResponse20012RiskInformation'), require('./InlineResponse20012SenderInformation'), require('./InlineResponse2011Links'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse20012 = factory(root.CyberSource.ApiClient, root.CyberSource.InlineResponse20012ApplicationInformation, root.CyberSource.InlineResponse20012BuyerInformation, root.CyberSource.InlineResponse20012ClientReferenceInformation, root.CyberSource.InlineResponse20012ConsumerAuthenticationInformation, root.CyberSource.InlineResponse20012DeviceInformation, root.CyberSource.InlineResponse20012ErrorInformation, root.CyberSource.InlineResponse20012FraudMarkingInformation, root.CyberSource.InlineResponse20012InstallmentInformation, root.CyberSource.InlineResponse20012MerchantDefinedInformation, root.CyberSource.InlineResponse20012MerchantInformation, root.CyberSource.InlineResponse20012OrderInformation, root.CyberSource.InlineResponse20012PaymentInformation, root.CyberSource.InlineResponse20012PointOfSaleInformation, root.CyberSource.InlineResponse20012ProcessingInformation, root.CyberSource.InlineResponse20012ProcessorInformation, root.CyberSource.InlineResponse20012RiskInformation, root.CyberSource.InlineResponse20012SenderInformation, root.CyberSource.InlineResponse2011Links);
  }
}(this, function(ApiClient, InlineResponse20012ApplicationInformation, InlineResponse20012BuyerInformation, InlineResponse20012ClientReferenceInformation, InlineResponse20012ConsumerAuthenticationInformation, InlineResponse20012DeviceInformation, InlineResponse20012ErrorInformation, InlineResponse20012FraudMarkingInformation, InlineResponse20012InstallmentInformation, InlineResponse20012MerchantDefinedInformation, InlineResponse20012MerchantInformation, InlineResponse20012OrderInformation, InlineResponse20012PaymentInformation, InlineResponse20012PointOfSaleInformation, InlineResponse20012ProcessingInformation, InlineResponse20012ProcessorInformation, InlineResponse20012RiskInformation, InlineResponse20012SenderInformation, InlineResponse2011Links) {
  'use strict';




  /**
   * The InlineResponse20012 model module.
   * @module model/InlineResponse20012
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse20012</code>.
   * @alias module:model/InlineResponse20012
   * @class
   */
  var exports = function() {
    var _this = this;

























  };

  /**
   * Constructs a <code>InlineResponse20012</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse20012} obj Optional instance to populate.
   * @return {module:model/InlineResponse20012} The populated <code>InlineResponse20012</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('rootId')) {
        obj['rootId'] = ApiClient.convertToType(data['rootId'], 'String');
      }
      if (data.hasOwnProperty('reconciliationId')) {
        obj['reconciliationId'] = ApiClient.convertToType(data['reconciliationId'], 'String');
      }
      if (data.hasOwnProperty('merchantId')) {
        obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('submitTimeUtc')) {
        obj['submitTimeUtc'] = ApiClient.convertToType(data['submitTimeUtc'], 'String');
      }
      if (data.hasOwnProperty('applicationInformation')) {
        obj['applicationInformation'] = InlineResponse20012ApplicationInformation.constructFromObject(data['applicationInformation']);
      }
      if (data.hasOwnProperty('buyerInformation')) {
        obj['buyerInformation'] = InlineResponse20012BuyerInformation.constructFromObject(data['buyerInformation']);
      }
      if (data.hasOwnProperty('clientReferenceInformation')) {
        obj['clientReferenceInformation'] = InlineResponse20012ClientReferenceInformation.constructFromObject(data['clientReferenceInformation']);
      }
      if (data.hasOwnProperty('consumerAuthenticationInformation')) {
        obj['consumerAuthenticationInformation'] = InlineResponse20012ConsumerAuthenticationInformation.constructFromObject(data['consumerAuthenticationInformation']);
      }
      if (data.hasOwnProperty('deviceInformation')) {
        obj['deviceInformation'] = InlineResponse20012DeviceInformation.constructFromObject(data['deviceInformation']);
      }
      if (data.hasOwnProperty('errorInformation')) {
        obj['errorInformation'] = InlineResponse20012ErrorInformation.constructFromObject(data['errorInformation']);
      }
      if (data.hasOwnProperty('installmentInformation')) {
        obj['installmentInformation'] = InlineResponse20012InstallmentInformation.constructFromObject(data['installmentInformation']);
      }
      if (data.hasOwnProperty('fraudMarkingInformation')) {
        obj['fraudMarkingInformation'] = InlineResponse20012FraudMarkingInformation.constructFromObject(data['fraudMarkingInformation']);
      }
      if (data.hasOwnProperty('merchantDefinedInformation')) {
        obj['merchantDefinedInformation'] = ApiClient.convertToType(data['merchantDefinedInformation'], [InlineResponse20012MerchantDefinedInformation]);
      }
      if (data.hasOwnProperty('merchantInformation')) {
        obj['merchantInformation'] = InlineResponse20012MerchantInformation.constructFromObject(data['merchantInformation']);
      }
      if (data.hasOwnProperty('orderInformation')) {
        obj['orderInformation'] = InlineResponse20012OrderInformation.constructFromObject(data['orderInformation']);
      }
      if (data.hasOwnProperty('paymentInformation')) {
        obj['paymentInformation'] = InlineResponse20012PaymentInformation.constructFromObject(data['paymentInformation']);
      }
      if (data.hasOwnProperty('processingInformation')) {
        obj['processingInformation'] = InlineResponse20012ProcessingInformation.constructFromObject(data['processingInformation']);
      }
      if (data.hasOwnProperty('processorInformation')) {
        obj['processorInformation'] = InlineResponse20012ProcessorInformation.constructFromObject(data['processorInformation']);
      }
      if (data.hasOwnProperty('pointOfSaleInformation')) {
        obj['pointOfSaleInformation'] = InlineResponse20012PointOfSaleInformation.constructFromObject(data['pointOfSaleInformation']);
      }
      if (data.hasOwnProperty('riskInformation')) {
        obj['riskInformation'] = InlineResponse20012RiskInformation.constructFromObject(data['riskInformation']);
      }
      if (data.hasOwnProperty('senderInformation')) {
        obj['senderInformation'] = InlineResponse20012SenderInformation.constructFromObject(data['senderInformation']);
      }
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = InlineResponse2011Links.constructFromObject(data['_links']);
      }
    }
    return obj;
  }

  /**
   * An unique identification number assigned by CyberSource to identify the submitted request.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Payment Request Id
   * @member {String} rootId
   */
  exports.prototype['rootId'] = undefined;
  /**
   * The reconciliation id for the submitted transaction. This value is not returned for all processors. 
   * @member {String} reconciliationId
   */
  exports.prototype['reconciliationId'] = undefined;
  /**
   * The description for this field is not available.
   * @member {String} merchantId
   */
  exports.prototype['merchantId'] = undefined;
  /**
   * The status of the submitted transaction.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Time of request in UTC. `Format: YYYY-MM-DDThh:mm:ssZ`  Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. 
   * @member {String} submitTimeUtc
   */
  exports.prototype['submitTimeUtc'] = undefined;
  /**
   * @member {module:model/InlineResponse20012ApplicationInformation} applicationInformation
   */
  exports.prototype['applicationInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012BuyerInformation} buyerInformation
   */
  exports.prototype['buyerInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012ClientReferenceInformation} clientReferenceInformation
   */
  exports.prototype['clientReferenceInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012ConsumerAuthenticationInformation} consumerAuthenticationInformation
   */
  exports.prototype['consumerAuthenticationInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012DeviceInformation} deviceInformation
   */
  exports.prototype['deviceInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012ErrorInformation} errorInformation
   */
  exports.prototype['errorInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012InstallmentInformation} installmentInformation
   */
  exports.prototype['installmentInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012FraudMarkingInformation} fraudMarkingInformation
   */
  exports.prototype['fraudMarkingInformation'] = undefined;
  /**
   * The description for this field is not available.
   * @member {Array.<module:model/InlineResponse20012MerchantDefinedInformation>} merchantDefinedInformation
   */
  exports.prototype['merchantDefinedInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012MerchantInformation} merchantInformation
   */
  exports.prototype['merchantInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012OrderInformation} orderInformation
   */
  exports.prototype['orderInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012PaymentInformation} paymentInformation
   */
  exports.prototype['paymentInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012ProcessingInformation} processingInformation
   */
  exports.prototype['processingInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012ProcessorInformation} processorInformation
   */
  exports.prototype['processorInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012PointOfSaleInformation} pointOfSaleInformation
   */
  exports.prototype['pointOfSaleInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012RiskInformation} riskInformation
   */
  exports.prototype['riskInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse20012SenderInformation} senderInformation
   */
  exports.prototype['senderInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse2011Links} _links
   */
  exports.prototype['_links'] = undefined;



  return exports;
}));


