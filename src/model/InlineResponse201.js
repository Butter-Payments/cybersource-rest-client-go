/**
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse201ClientReferenceInformation', 'model/InlineResponse201Embedded', 'model/InlineResponse201ErrorInformation', 'model/InlineResponse201Links', 'model/InlineResponse201OrderInformation', 'model/InlineResponse201PaymentInformation', 'model/InlineResponse201PointOfSaleInformation', 'model/InlineResponse201ProcessorInformation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse201ClientReferenceInformation'), require('./InlineResponse201Embedded'), require('./InlineResponse201ErrorInformation'), require('./InlineResponse201Links'), require('./InlineResponse201OrderInformation'), require('./InlineResponse201PaymentInformation'), require('./InlineResponse201PointOfSaleInformation'), require('./InlineResponse201ProcessorInformation'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse201 = factory(root.CyberSource.ApiClient, root.CyberSource.InlineResponse201ClientReferenceInformation, root.CyberSource.InlineResponse201Embedded, root.CyberSource.InlineResponse201ErrorInformation, root.CyberSource.InlineResponse201Links, root.CyberSource.InlineResponse201OrderInformation, root.CyberSource.InlineResponse201PaymentInformation, root.CyberSource.InlineResponse201PointOfSaleInformation, root.CyberSource.InlineResponse201ProcessorInformation);
  }
}(this, function(ApiClient, InlineResponse201ClientReferenceInformation, InlineResponse201Embedded, InlineResponse201ErrorInformation, InlineResponse201Links, InlineResponse201OrderInformation, InlineResponse201PaymentInformation, InlineResponse201PointOfSaleInformation, InlineResponse201ProcessorInformation) {
  'use strict';




  /**
   * The InlineResponse201 model module.
   * @module model/InlineResponse201
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse201</code>.
   * @alias module:model/InlineResponse201
   * @class
   */
  var exports = function() {
    var _this = this;













  };

  /**
   * Constructs a <code>InlineResponse201</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse201} obj Optional instance to populate.
   * @return {module:model/InlineResponse201} The populated <code>InlineResponse201</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('_links')) {
        obj['_links'] = InlineResponse201Links.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('_embedded')) {
        obj['_embedded'] = InlineResponse201Embedded.constructFromObject(data['_embedded']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('submitTimeUtc')) {
        obj['submitTimeUtc'] = ApiClient.convertToType(data['submitTimeUtc'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('reconciliationId')) {
        obj['reconciliationId'] = ApiClient.convertToType(data['reconciliationId'], 'String');
      }
      if (data.hasOwnProperty('errorInformation')) {
        obj['errorInformation'] = InlineResponse201ErrorInformation.constructFromObject(data['errorInformation']);
      }
      if (data.hasOwnProperty('clientReferenceInformation')) {
        obj['clientReferenceInformation'] = InlineResponse201ClientReferenceInformation.constructFromObject(data['clientReferenceInformation']);
      }
      if (data.hasOwnProperty('processorInformation')) {
        obj['processorInformation'] = InlineResponse201ProcessorInformation.constructFromObject(data['processorInformation']);
      }
      if (data.hasOwnProperty('paymentInformation')) {
        obj['paymentInformation'] = InlineResponse201PaymentInformation.constructFromObject(data['paymentInformation']);
      }
      if (data.hasOwnProperty('orderInformation')) {
        obj['orderInformation'] = InlineResponse201OrderInformation.constructFromObject(data['orderInformation']);
      }
      if (data.hasOwnProperty('pointOfSaleInformation')) {
        obj['pointOfSaleInformation'] = InlineResponse201PointOfSaleInformation.constructFromObject(data['pointOfSaleInformation']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/InlineResponse201Links} _links
   */
  exports.prototype['_links'] = undefined;
  /**
   * @member {module:model/InlineResponse201Embedded} _embedded
   */
  exports.prototype['_embedded'] = undefined;
  /**
   * An unique identification number assigned by CyberSource to identify the submitted request.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Time of request in UTC. `Format: YYYY-MM-DDThh:mm:ssZ`  Example 2016-08-11T22:47:57Z equals August 11, 2016, at 22:47:57 (10:47:57 p.m.). The T separates the date and the time. The Z indicates UTC. 
   * @member {String} submitTimeUtc
   */
  exports.prototype['submitTimeUtc'] = undefined;
  /**
   * The status of the submitted transaction.
   * @member {module:model/InlineResponse201.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The reconciliation id for the submitted transaction. This value is not returned for all processors. 
   * @member {String} reconciliationId
   */
  exports.prototype['reconciliationId'] = undefined;
  /**
   * @member {module:model/InlineResponse201ErrorInformation} errorInformation
   */
  exports.prototype['errorInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse201ClientReferenceInformation} clientReferenceInformation
   */
  exports.prototype['clientReferenceInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse201ProcessorInformation} processorInformation
   */
  exports.prototype['processorInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse201PaymentInformation} paymentInformation
   */
  exports.prototype['paymentInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse201OrderInformation} orderInformation
   */
  exports.prototype['orderInformation'] = undefined;
  /**
   * @member {module:model/InlineResponse201PointOfSaleInformation} pointOfSaleInformation
   */
  exports.prototype['pointOfSaleInformation'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "AUTHORIZED"
     * @const
     */
    "AUTHORIZED": "AUTHORIZED",
    /**
     * value: "PARTIAL_AUTHORIZED"
     * @const
     */
    "PARTIAL_AUTHORIZED": "PARTIAL_AUTHORIZED",
    /**
     * value: "AUTHORIZED_PENDING_REVIEW"
     * @const
     */
    "AUTHORIZED_PENDING_REVIEW": "AUTHORIZED_PENDING_REVIEW",
    /**
     * value: "DECLINED"
     * @const
     */
    "DECLINED": "DECLINED"  };


  return exports;
}));


