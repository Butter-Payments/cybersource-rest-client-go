// Code generated by go-swagger; DO NOT EDIT.

package customer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PostCustomerReader is a Reader for the PostCustomer structure.
type PostCustomerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCustomerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostCustomerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostCustomerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostCustomerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostCustomerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewPostCustomerFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostCustomerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostCustomerCreated creates a PostCustomerCreated with default headers values
func NewPostCustomerCreated() *PostCustomerCreated {
	return &PostCustomerCreated{}
}

/*PostCustomerCreated handles this case with default header values.

A new Customer has been created.
*/
type PostCustomerCreated struct {
	/*An ETag is an identifier assigned to a specific version of a resource.
	 */
	ETag string
	/*Location of the Customer.
	 */
	Location string
	/*A globally-unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerCreatedBody
}

func (o *PostCustomerCreated) Error() string {
	return fmt.Sprintf("[POST /tms/v2/customers][%d] postCustomerCreated  %+v", 201, o.Payload)
}

func (o *PostCustomerCreated) GetPayload() *PostCustomerCreatedBody {
	return o.Payload
}

func (o *PostCustomerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header Location
	o.Location = response.GetHeader("Location")

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PostCustomerCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerBadRequest creates a PostCustomerBadRequest with default headers values
func NewPostCustomerBadRequest() *PostCustomerBadRequest {
	return &PostCustomerBadRequest{}
}

/*PostCustomerBadRequest handles this case with default header values.

Bad Request: e.g. A required header value could be missing.
*/
type PostCustomerBadRequest struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerBadRequestBody
}

func (o *PostCustomerBadRequest) Error() string {
	return fmt.Sprintf("[POST /tms/v2/customers][%d] postCustomerBadRequest  %+v", 400, o.Payload)
}

func (o *PostCustomerBadRequest) GetPayload() *PostCustomerBadRequestBody {
	return o.Payload
}

func (o *PostCustomerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PostCustomerBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerForbidden creates a PostCustomerForbidden with default headers values
func NewPostCustomerForbidden() *PostCustomerForbidden {
	return &PostCustomerForbidden{}
}

/*PostCustomerForbidden handles this case with default header values.

403ForbiddenResponse: e.g. The profile might not have permission to perform the operation.
*/
type PostCustomerForbidden struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerForbiddenBody
}

func (o *PostCustomerForbidden) Error() string {
	return fmt.Sprintf("[POST /tms/v2/customers][%d] postCustomerForbidden  %+v", 403, o.Payload)
}

func (o *PostCustomerForbidden) GetPayload() *PostCustomerForbiddenBody {
	return o.Payload
}

func (o *PostCustomerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PostCustomerForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerConflict creates a PostCustomerConflict with default headers values
func NewPostCustomerConflict() *PostCustomerConflict {
	return &PostCustomerConflict{}
}

/*PostCustomerConflict handles this case with default header values.

Conflict. The token is linked to a Payment Instrument.
*/
type PostCustomerConflict struct {
	/*A globally unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string
}

func (o *PostCustomerConflict) Error() string {
	return fmt.Sprintf("[POST /tms/v2/customers][%d] postCustomerConflict ", 409)
}

func (o *PostCustomerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	return nil
}

// NewPostCustomerFailedDependency creates a PostCustomerFailedDependency with default headers values
func NewPostCustomerFailedDependency() *PostCustomerFailedDependency {
	return &PostCustomerFailedDependency{}
}

/*PostCustomerFailedDependency handles this case with default header values.

Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.
*/
type PostCustomerFailedDependency struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerFailedDependencyBody
}

func (o *PostCustomerFailedDependency) Error() string {
	return fmt.Sprintf("[POST /tms/v2/customers][%d] postCustomerFailedDependency  %+v", 424, o.Payload)
}

func (o *PostCustomerFailedDependency) GetPayload() *PostCustomerFailedDependencyBody {
	return o.Payload
}

func (o *PostCustomerFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PostCustomerFailedDependencyBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCustomerInternalServerError creates a PostCustomerInternalServerError with default headers values
func NewPostCustomerInternalServerError() *PostCustomerInternalServerError {
	return &PostCustomerInternalServerError{}
}

/*PostCustomerInternalServerError handles this case with default header values.

Unexpected error.
*/
type PostCustomerInternalServerError struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PostCustomerInternalServerErrorBody
}

func (o *PostCustomerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tms/v2/customers][%d] postCustomerInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCustomerInternalServerError) GetPayload() *PostCustomerInternalServerErrorBody {
	return o.Payload
}

func (o *PostCustomerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PostCustomerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostCustomerBadRequestBody post customer bad request body
swagger:model PostCustomerBadRequestBody
*/
type PostCustomerBadRequestBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerBadRequestBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer bad request body
func (o *PostCustomerBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerBadRequestBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerBadRequestBodyErrorsItems0 post customer bad request body errors items0
swagger:model PostCustomerBadRequestBodyErrorsItems0
*/
type PostCustomerBadRequestBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PostCustomerBadRequestBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer bad request body errors items0
func (o *PostCustomerBadRequestBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerBadRequestBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerBadRequestBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerBadRequestBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerBadRequestBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerBadRequestBodyErrorsItems0DetailsItems0 post customer bad request body errors items0 details items0
swagger:model PostCustomerBadRequestBodyErrorsItems0DetailsItems0
*/
type PostCustomerBadRequestBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this post customer bad request body errors items0 details items0
func (o *PostCustomerBadRequestBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerBadRequestBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerBadRequestBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerBadRequestBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerBody post customer body
swagger:model PostCustomerBody
*/
type PostCustomerBody struct {

	// embedded
	Embedded *PostCustomerParamsBodyEmbedded `json:"_embedded,omitempty"`

	// links
	Links *PostCustomerParamsBodyLinks `json:"_links,omitempty"`

	// buyer information
	BuyerInformation *PostCustomerParamsBodyBuyerInformation `json:"buyerInformation,omitempty"`

	// client reference information
	ClientReferenceInformation *PostCustomerParamsBodyClientReferenceInformation `json:"clientReferenceInformation,omitempty"`

	// default payment instrument
	DefaultPaymentInstrument *PostCustomerParamsBodyDefaultPaymentInstrument `json:"defaultPaymentInstrument,omitempty"`

	// default shipping address
	DefaultShippingAddress *PostCustomerParamsBodyDefaultShippingAddress `json:"defaultShippingAddress,omitempty"`

	// The id of the Customer Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// Object containing the custom data that the merchant defines.
	//
	MerchantDefinedInformation []*PostCustomerParamsBodyMerchantDefinedInformationItems0 `json:"merchantDefinedInformation"`

	// metadata
	Metadata *PostCustomerParamsBodyMetadata `json:"metadata,omitempty"`

	// object information
	ObjectInformation *PostCustomerParamsBodyObjectInformation `json:"objectInformation,omitempty"`
}

// Validate validates this post customer body
func (o *PostCustomerBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuyerInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClientReferenceInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDefaultPaymentInstrument(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDefaultShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantDefinedInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateObjectInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateBuyerInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.BuyerInformation) { // not required
		return nil
	}

	if o.BuyerInformation != nil {
		if err := o.BuyerInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "buyerInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateClientReferenceInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ClientReferenceInformation) { // not required
		return nil
	}

	if o.ClientReferenceInformation != nil {
		if err := o.ClientReferenceInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "clientReferenceInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateDefaultPaymentInstrument(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultPaymentInstrument) { // not required
		return nil
	}

	if o.DefaultPaymentInstrument != nil {
		if err := o.DefaultPaymentInstrument.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "defaultPaymentInstrument")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateDefaultShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultShippingAddress) { // not required
		return nil
	}

	if o.DefaultShippingAddress != nil {
		if err := o.DefaultShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "defaultShippingAddress")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerRequest"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerBody) validateMerchantDefinedInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantDefinedInformation) { // not required
		return nil
	}

	for i := 0; i < len(o.MerchantDefinedInformation); i++ {
		if swag.IsZero(o.MerchantDefinedInformation[i]) { // not required
			continue
		}

		if o.MerchantDefinedInformation[i] != nil {
			if err := o.MerchantDefinedInformation[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerRequest" + "." + "merchantDefinedInformation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostCustomerBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerBody) validateObjectInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ObjectInformation) { // not required
		return nil
	}

	if o.ObjectInformation != nil {
		if err := o.ObjectInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "objectInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBody TmsV2CustomersResponse
swagger:model PostCustomerCreatedBody
*/
type PostCustomerCreatedBody struct {

	// embedded
	Embedded *PostCustomerCreatedBodyEmbedded `json:"_embedded,omitempty"`

	// links
	Links *PostCustomerCreatedBodyLinks `json:"_links,omitempty"`

	// buyer information
	BuyerInformation *PostCustomerCreatedBodyBuyerInformation `json:"buyerInformation,omitempty"`

	// client reference information
	ClientReferenceInformation *PostCustomerCreatedBodyClientReferenceInformation `json:"clientReferenceInformation,omitempty"`

	// default payment instrument
	DefaultPaymentInstrument *PostCustomerCreatedBodyDefaultPaymentInstrument `json:"defaultPaymentInstrument,omitempty"`

	// default shipping address
	DefaultShippingAddress *PostCustomerCreatedBodyDefaultShippingAddress `json:"defaultShippingAddress,omitempty"`

	// The id of the Customer Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// Object containing the custom data that the merchant defines.
	//
	MerchantDefinedInformation []*PostCustomerCreatedBodyMerchantDefinedInformationItems0 `json:"merchantDefinedInformation"`

	// metadata
	Metadata *PostCustomerCreatedBodyMetadata `json:"metadata,omitempty"`

	// object information
	ObjectInformation *PostCustomerCreatedBodyObjectInformation `json:"objectInformation,omitempty"`
}

// Validate validates this post customer created body
func (o *PostCustomerCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuyerInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateClientReferenceInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDefaultPaymentInstrument(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDefaultShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantDefinedInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateObjectInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBody) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateBuyerInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.BuyerInformation) { // not required
		return nil
	}

	if o.BuyerInformation != nil {
		if err := o.BuyerInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "buyerInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateClientReferenceInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ClientReferenceInformation) { // not required
		return nil
	}

	if o.ClientReferenceInformation != nil {
		if err := o.ClientReferenceInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "clientReferenceInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateDefaultPaymentInstrument(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultPaymentInstrument) { // not required
		return nil
	}

	if o.DefaultPaymentInstrument != nil {
		if err := o.DefaultPaymentInstrument.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "defaultPaymentInstrument")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateDefaultShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultShippingAddress) { // not required
		return nil
	}

	if o.DefaultShippingAddress != nil {
		if err := o.DefaultShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "defaultShippingAddress")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerCreated"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateMerchantDefinedInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantDefinedInformation) { // not required
		return nil
	}

	for i := 0; i < len(o.MerchantDefinedInformation); i++ {
		if swag.IsZero(o.MerchantDefinedInformation[i]) { // not required
			continue
		}

		if o.MerchantDefinedInformation[i] != nil {
			if err := o.MerchantDefinedInformation[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerCreated" + "." + "merchantDefinedInformation" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostCustomerCreatedBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBody) validateObjectInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ObjectInformation) { // not required
		return nil
	}

	if o.ObjectInformation != nil {
		if err := o.ObjectInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "objectInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyBuyerInformation post customer created body buyer information
swagger:model PostCustomerCreatedBodyBuyerInformation
*/
type PostCustomerCreatedBodyBuyerInformation struct {

	// Customer's primary email address, including the full domain name.
	//
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Your identifier for the customer.
	//
	// Max Length: 100
	MerchantCustomerID string `json:"merchantCustomerID,omitempty"`
}

// Validate validates this post customer created body buyer information
func (o *PostCustomerCreatedBodyBuyerInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantCustomerID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyBuyerInformation) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"buyerInformation"+"."+"email", "body", string(o.Email), 255); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyBuyerInformation) validateMerchantCustomerID(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantCustomerID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"buyerInformation"+"."+"merchantCustomerID", "body", string(o.MerchantCustomerID), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyBuyerInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyBuyerInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyBuyerInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyClientReferenceInformation post customer created body client reference information
swagger:model PostCustomerCreatedBodyClientReferenceInformation
*/
type PostCustomerCreatedBodyClientReferenceInformation struct {

	// Client-generated order reference or tracking number.
	//
	// Max Length: 50
	Code string `json:"code,omitempty"`
}

// Validate validates this post customer created body client reference information
func (o *PostCustomerCreatedBodyClientReferenceInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyClientReferenceInformation) validateCode(formats strfmt.Registry) error {

	if swag.IsZero(o.Code) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"clientReferenceInformation"+"."+"code", "body", string(o.Code), 50); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyClientReferenceInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyClientReferenceInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyClientReferenceInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyDefaultPaymentInstrument post customer created body default payment instrument
swagger:model PostCustomerCreatedBodyDefaultPaymentInstrument
*/
type PostCustomerCreatedBodyDefaultPaymentInstrument struct {

	// The id of the Customers default Payment Instrument
	//
	ID string `json:"id,omitempty"`
}

// Validate validates this post customer created body default payment instrument
func (o *PostCustomerCreatedBodyDefaultPaymentInstrument) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyDefaultPaymentInstrument) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyDefaultPaymentInstrument) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyDefaultPaymentInstrument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyDefaultShippingAddress post customer created body default shipping address
swagger:model PostCustomerCreatedBodyDefaultShippingAddress
*/
type PostCustomerCreatedBodyDefaultShippingAddress struct {

	// The id of the Customers default Shipping Address
	//
	ID string `json:"id,omitempty"`
}

// Validate validates this post customer created body default shipping address
func (o *PostCustomerCreatedBodyDefaultShippingAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyDefaultShippingAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyDefaultShippingAddress) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyDefaultShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbedded Additional resources for the Customer token.
//
swagger:model PostCustomerCreatedBodyEmbedded
*/
type PostCustomerCreatedBodyEmbedded struct {

	// default payment instrument
	DefaultPaymentInstrument *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument `json:"defaultPaymentInstrument,omitempty"`

	// default shipping address
	DefaultShippingAddress *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress `json:"defaultShippingAddress,omitempty"`
}

// Validate validates this post customer created body embedded
func (o *PostCustomerCreatedBodyEmbedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDefaultPaymentInstrument(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDefaultShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbedded) validateDefaultPaymentInstrument(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultPaymentInstrument) { // not required
		return nil
	}

	if o.DefaultPaymentInstrument != nil {
		if err := o.DefaultPaymentInstrument.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbedded) validateDefaultShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultShippingAddress) { // not required
		return nil
	}

	if o.DefaultShippingAddress != nil {
		if err := o.DefaultShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultShippingAddress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbedded) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument post customer created body embedded default payment instrument
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument struct {

	// embedded
	Embedded *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded `json:"_embedded,omitempty"`

	// links
	Links *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks `json:"_links,omitempty"`

	// bank account
	BankAccount *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount `json:"bankAccount,omitempty"`

	// bill to
	BillTo *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo `json:"billTo,omitempty"`

	// buyer information
	BuyerInformation *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation `json:"buyerInformation,omitempty"`

	// card
	Card *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard `json:"card,omitempty"`

	// The id of the Payment Instrument Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// instrument identifier
	InstrumentIdentifier *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier `json:"instrumentIdentifier,omitempty"`

	// merchant information
	MerchantInformation *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation `json:"merchantInformation,omitempty"`

	// metadata
	Metadata *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata `json:"metadata,omitempty"`

	// The type of token.
	//
	// Valid values:
	// - paymentInstrument
	//
	// Read Only: true
	Object string `json:"object,omitempty"`

	// processing information
	ProcessingInformation *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation `json:"processingInformation,omitempty"`

	// Issuers state for the card number.
	// Valid values:
	// - ACTIVE
	// - CLOSED : The account has been closed.
	//
	// Read Only: true
	State string `json:"state,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBankAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBillTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuyerInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInstrumentIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProcessingInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateBankAccount(formats strfmt.Registry) error {

	if swag.IsZero(o.BankAccount) { // not required
		return nil
	}

	if o.BankAccount != nil {
		if err := o.BankAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "bankAccount")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateBillTo(formats strfmt.Registry) error {

	if swag.IsZero(o.BillTo) { // not required
		return nil
	}

	if o.BillTo != nil {
		if err := o.BillTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateBuyerInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.BuyerInformation) { // not required
		return nil
	}

	if o.BuyerInformation != nil {
		if err := o.BuyerInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "buyerInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateInstrumentIdentifier(formats strfmt.Registry) error {

	if swag.IsZero(o.InstrumentIdentifier) { // not required
		return nil
	}

	if o.InstrumentIdentifier != nil {
		if err := o.InstrumentIdentifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "instrumentIdentifier")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateMerchantInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantInformation) { // not required
		return nil
	}

	if o.MerchantInformation != nil {
		if err := o.MerchantInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "merchantInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) validateProcessingInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ProcessingInformation) { // not required
		return nil
	}

	if o.ProcessingInformation != nil {
		if err := o.ProcessingInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "processingInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount post customer created body embedded default payment instrument bank account
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount struct {

	// Account type.
	//
	// Valid values:
	//  - checking : C
	//  - general ledger : G This value is supported only on Wells Fargo ACH
	//  - savings : S (U.S. dollars only)
	//  - corporate checking : X (U.S. dollars only)
	//
	// Max Length: 1
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument bank account
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"bankAccount"+"."+"type", "body", string(o.Type), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBankAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo post customer created body embedded default payment instrument bill to
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo struct {

	// Payment card billing street address as it appears on the credit card issuer’s records.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Additional address information.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the billing address. Use the State, Province, and Territory Codes for the United States
	// and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Name of the customer’s company.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Payment card billing country. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Customer's email address, including the full domain name.
	//
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Customer’s first name. This name must be the same as the name on the card.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Customer’s last name. This name must be the same as the name on the card.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// Payment card billing city.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Customer’s phone number.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// **Example** `12345-6789`
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// **Example** `A1B 2C3`
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument bill to
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"company", "body", string(o.Company), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"email", "body", string(o.Email), 255); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBillTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation post customer created body embedded default payment instrument buyer information
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation struct {

	// Company’s tax identifier. This is only used for eCheck service.
	//
	// Max Length: 9
	CompanyTaxID string `json:"companyTaxID,omitempty"`

	// Currency used for the order. Use the three-character I[ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)
	//
	// For details about currency as used in partial authorizations, see "Features for Debit Cards and Prepaid Cards" in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/)
	//
	// For an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your payment authorization request.
	//
	// #### DCC for First Data
	// Your local currency. For details, see the `currency` field description in [Dynamic Currency Conversion For First Data Using the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/DCC_FirstData_SCMP/DCC_FirstData_SCMP_API.pdf).
	//
	// Max Length: 3
	Currency string `json:"currency,omitempty"`

	// Date of birth of the customer. Format: YYYY-MM-DD
	//
	// Format: date
	DateOfBirth strfmt.Date `json:"dateOfBirth,omitempty"`

	// personal identification
	PersonalIdentification []*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0 `json:"personalIdentification"`
}

// Validate validates this post customer created body embedded default payment instrument buyer information
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompanyTaxID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateOfBirth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePersonalIdentification(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validateCompanyTaxID(formats strfmt.Registry) error {

	if swag.IsZero(o.CompanyTaxID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"buyerInformation"+"."+"companyTaxID", "body", string(o.CompanyTaxID), 9); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(o.Currency) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"buyerInformation"+"."+"currency", "body", string(o.Currency), 3); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validateDateOfBirth(formats strfmt.Registry) error {

	if swag.IsZero(o.DateOfBirth) { // not required
		return nil
	}

	if err := validate.FormatOf("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"buyerInformation"+"."+"dateOfBirth", "body", "date", o.DateOfBirth.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validatePersonalIdentification(formats strfmt.Registry) error {

	if swag.IsZero(o.PersonalIdentification) { // not required
		return nil
	}

	for i := 0; i < len(o.PersonalIdentification); i++ {
		if swag.IsZero(o.PersonalIdentification[i]) { // not required
			continue
		}

		if o.PersonalIdentification[i] != nil {
			if err := o.PersonalIdentification[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "buyerInformation" + "." + "personalIdentification" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0 post customer created body embedded default payment instrument buyer information personal identification items0
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0 struct {

	// The value of the identification type.
	//
	// Max Length: 26
	ID string `json:"id,omitempty"`

	// issued by
	IssuedBy *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy `json:"issuedBy,omitempty"`

	// The type of the identification.
	//
	// Valid values:
	//   - driver license
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument buyer information personal identification items0
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuedBy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MaxLength("id", "body", string(o.ID), 26); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) validateIssuedBy(formats strfmt.Registry) error {

	if swag.IsZero(o.IssuedBy) { // not required
		return nil
	}

	if o.IssuedBy != nil {
		if err := o.IssuedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("issuedBy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy post customer created body embedded default payment instrument buyer information personal identification items0 issued by
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy struct {

	// The State or province where the customer’s driver’s license was issued.
	//
	// Use the two-character State, Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument buyer information personal identification items0 issued by
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("issuedBy"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard post customer created body embedded default payment instrument card
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard struct {

	// Two-digit month in which the payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the credit card expires.
	//
	// Format: `YYYY`.
	//
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.
	//
	// **Note** The issue number is not required for Maestro (UK Domestic) transactions.
	//
	// Max Length: 2
	IssueNumber string `json:"issueNumber,omitempty"`

	// Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`.
	// Valid values: 01 through 12.
	//
	// **Note** The start date is not required for Maestro (UK Domestic) transactions.
	//
	// Max Length: 2
	StartMonth string `json:"startMonth,omitempty"`

	// Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.
	//
	// **Note** The start date is not required for Maestro (UK Domestic) transactions.
	//
	// Max Length: 4
	StartYear string `json:"startYear,omitempty"`

	// tokenized information
	TokenizedInformation *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation `json:"tokenizedInformation,omitempty"`

	// Value that indicates the card type. Valid v2 : v1 - description values:
	//   * 001 : visa
	//   * 002 : mastercard - Eurocard—European regional brand of Mastercard
	//   * 003 : american express
	//   * 004 : discover
	//   * 005 : diners club
	//   * 006 : carte blanche
	//   * 007 : jcb
	//   * 008 : optima
	//   * 011 : twinpay credit
	//   * 012 : twinpay debit
	//   * 013 : walmart
	//   * 014 : enRoute
	//   * 015 : lowes consumer
	//   * 016 : home depot consumer
	//   * 017 : mbna
	//   * 018 : dicks sportswear
	//   * 019 : casual corner
	//   * 020 : sears
	//   * 021 : jal
	//   * 023 : disney
	//   * 024 : maestro uk domestic
	//   * 025 : sams club consumer
	//   * 026 : sams club business
	//   * 028 : bill me later
	//   * 029 : bebe
	//   * 030 : restoration hardware
	//   * 031 : delta online — use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.
	//   * 032 : solo
	//   * 033 : visa electron
	//   * 034 : dankort
	//   * 035 : laser
	//   * 036 : carte bleue — formerly Cartes Bancaires
	//   * 037 : carta si
	//   * 038 : pinless debit
	//   * 039 : encoded account
	//   * 040 : uatp
	//   * 041 : household
	//   * 042 : maestro international
	//   * 043 : ge money uk
	//   * 044 : korean cards
	//   * 045 : style
	//   * 046 : jcrew
	//   * 047 : payease china processing ewallet
	//   * 048 : payease china processing bank transfer
	//   * 049 : meijer private label
	//   * 050 : hipercard — supported only by the Comercio Latino processor.
	//   * 051 : aura — supported only by the Comercio Latino processor.
	//   * 052 : redecard
	//   * 054 : elo — supported only by the Comercio Latino processor.
	//   * 055 : capital one private label
	//   * 056 : synchrony private label
	//   * 057 : costco private label
	//   * 060 : mada
	//   * 062 : china union pay
	//   * 063 : falabella private label
	//
	Type string `json:"type,omitempty"`

	// 'Payment Instrument was created / updated as part of a pinless debit transaction.'
	//
	UseAs string `json:"useAs,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument card
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssueNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokenizedInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) validateIssueNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.IssueNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"issueNumber", "body", string(o.IssueNumber), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) validateStartMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.StartMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"startMonth", "body", string(o.StartMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) validateStartYear(formats strfmt.Registry) error {

	if swag.IsZero(o.StartYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"startYear", "body", string(o.StartYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) validateTokenizedInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.TokenizedInformation) { // not required
		return nil
	}

	if o.TokenizedInformation != nil {
		if err := o.TokenizedInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "card" + "." + "tokenizedInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation post customer created body embedded default payment instrument card tokenized information
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation struct {

	// Value that identifies your business and indicates that the cardholder’s account number is tokenized. This value
	// is assigned by the token service provider and is unique within the token service provider’s database.
	//
	// **Note** This field is supported only for **CyberSource through VisaNet** and **FDC Nashville Global**.
	//
	// Max Length: 11
	RequestorID string `json:"requestorID,omitempty"`

	// Type of transaction that provided the token data. This value does not specify the token service provider; it
	// specifies the entity that provided you with information about the token.
	//
	// Set the value for this field to 1. An application on the customer’s mobile device provided the token data.
	//
	// Max Length: 1
	TransactionType string `json:"transactionType,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument card tokenized information
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRequestorID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTransactionType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) validateRequestorID(formats strfmt.Registry) error {

	if swag.IsZero(o.RequestorID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"tokenizedInformation"+"."+"requestorID", "body", string(o.RequestorID), 11); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) validateTransactionType(formats strfmt.Registry) error {

	if swag.IsZero(o.TransactionType) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"tokenizedInformation"+"."+"transactionType", "body", string(o.TransactionType), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded Additional resources for the Payment Instrument token.
//
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded struct {

	// instrument identifier
	InstrumentIdentifier *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier `json:"instrumentIdentifier,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInstrumentIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded) validateInstrumentIdentifier(formats strfmt.Registry) error {

	if swag.IsZero(o.InstrumentIdentifier) { // not required
		return nil
	}

	if o.InstrumentIdentifier != nil {
		if err := o.InstrumentIdentifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier post customer created body embedded default payment instrument embedded instrument identifier
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier struct {

	// links
	Links *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks `json:"_links,omitempty"`

	// bank account
	BankAccount *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount `json:"bankAccount,omitempty"`

	// bill to
	BillTo *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo `json:"billTo,omitempty"`

	// card
	Card *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard `json:"card,omitempty"`

	// The id of the Instrument Identifier Token.
	//
	ID string `json:"id,omitempty"`

	// issuer
	Issuer *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer `json:"issuer,omitempty"`

	// metadata
	Metadata *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata `json:"metadata,omitempty"`

	// The type of token.
	//
	// Valid values:
	// - instrumentIdentifier
	//
	// Read Only: true
	Object string `json:"object,omitempty"`

	// processing information
	ProcessingInformation *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation `json:"processingInformation,omitempty"`

	// Issuers state for the card number.
	// Valid values:
	// - ACTIVE
	// - CLOSED : The account has been closed.
	//
	// Read Only: true
	State string `json:"state,omitempty"`

	// tokenized card
	TokenizedCard *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard `json:"tokenizedCard,omitempty"`

	// The type of Instrument Identifier.
	// Valid values:
	// - enrollable card
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBankAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBillTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProcessingInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokenizedCard(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateBankAccount(formats strfmt.Registry) error {

	if swag.IsZero(o.BankAccount) { // not required
		return nil
	}

	if o.BankAccount != nil {
		if err := o.BankAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "bankAccount")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateBillTo(formats strfmt.Registry) error {

	if swag.IsZero(o.BillTo) { // not required
		return nil
	}

	if o.BillTo != nil {
		if err := o.BillTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateIssuer(formats strfmt.Registry) error {

	if swag.IsZero(o.Issuer) { // not required
		return nil
	}

	if o.Issuer != nil {
		if err := o.Issuer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "issuer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateProcessingInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ProcessingInformation) { // not required
		return nil
	}

	if o.ProcessingInformation != nil {
		if err := o.ProcessingInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateTokenizedCard(formats strfmt.Registry) error {

	if swag.IsZero(o.TokenizedCard) { // not required
		return nil
	}

	if o.TokenizedCard != nil {
		if err := o.TokenizedCard.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "tokenizedCard")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount post customer created body embedded default payment instrument embedded instrument identifier bank account
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount struct {

	// Account number.
	//
	// When processing encoded account numbers, use this field for the encoded account number.
	//
	// Max Length: 17
	Number string `json:"number,omitempty"`

	// Bank routing number. This is also called the transit number.
	//
	// For details, see `ecp_rdfi` field description in the [Electronic Check Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/EChecks_SCMP_API/html/)
	//
	RoutingNumber string `json:"routingNumber,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier bank account
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) validateNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.Number) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"bankAccount"+"."+"number", "body", string(o.Number), 17); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo This information is sent to the issuer as part of network token enrollment and is not stored under the Instrument Identifier token.
//
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo struct {

	// Payment card billing street address as it appears on the credit card issuer’s records.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Additional address information.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the billing address. Use the State, Province, and Territory Codes for the United States
	// and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Payment card billing country. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Payment card billing city.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// **Example** `12345-6789`
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// **Example** `A1B 2C3`
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier bill to
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard The expirationMonth, expirationYear and securityCode is sent to the issuer as part of network token enrollment and is not stored under the Instrument Identifier token.
//
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard struct {

	// Two-digit month in which the payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the credit card expires.
	//
	// Format: `YYYY`.
	//
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The customer’s payment card number, also known as the Primary Account Number (PAN). You can also use this field
	// for encoded account numbers.
	//
	// Max Length: 19
	// Min Length: 12
	Number string `json:"number,omitempty"`

	// Card Verification Number.
	//
	// Max Length: 4
	SecurityCode string `json:"securityCode,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier card
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSecurityCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.Number) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"number", "body", string(o.Number), 12); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"number", "body", string(o.Number), 19); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateSecurityCode(formats strfmt.Registry) error {

	if swag.IsZero(o.SecurityCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"securityCode", "body", string(o.SecurityCode), 4); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer post customer created body embedded default payment instrument embedded instrument identifier issuer
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer struct {

	// This reference number serves as a link to the cardholder account and to all transactions for that account.
	//
	// Read Only: true
	// Max Length: 32
	PaymentAccountReference string `json:"paymentAccountReference,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier issuer
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePaymentAccountReference(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) validatePaymentAccountReference(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentAccountReference) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"issuer"+"."+"paymentAccountReference", "body", string(o.PaymentAccountReference), 32); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks post customer created body embedded default payment instrument embedded instrument identifier links
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks struct {

	// payment instruments
	PaymentInstruments *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments `json:"paymentInstruments,omitempty"`

	// self
	Self *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier links
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePaymentInstruments(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) validatePaymentInstruments(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentInstruments) { // not required
		return nil
	}

	if o.PaymentInstruments != nil {
		if err := o.PaymentInstruments.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "_links" + "." + "paymentInstruments")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments post customer created body embedded default payment instrument embedded instrument identifier links payment instruments
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments struct {

	// Link to the Instrument Identifiers Payment Instruments.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier links payment instruments
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf post customer created body embedded default payment instrument embedded instrument identifier links self
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf struct {

	// Link to the Instrument Identifier.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier links self
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata post customer created body embedded default payment instrument embedded instrument identifier metadata
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata struct {

	// The creator of the Instrument Identifier token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier metadata
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation post customer created body embedded default payment instrument embedded instrument identifier processing information
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation struct {

	// authorization options
	AuthorizationOptions *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions `json:"authorizationOptions,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier processing information
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAuthorizationOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) validateAuthorizationOptions(formats strfmt.Registry) error {

	if swag.IsZero(o.AuthorizationOptions) { // not required
		return nil
	}

	if o.AuthorizationOptions != nil {
		if err := o.AuthorizationOptions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation" + "." + "authorizationOptions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions post customer created body embedded default payment instrument embedded instrument identifier processing information authorization options
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions struct {

	// initiator
	Initiator *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator `json:"initiator,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier processing information authorization options
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInitiator(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) validateInitiator(formats strfmt.Registry) error {

	if swag.IsZero(o.Initiator) { // not required
		return nil
	}

	if o.Initiator != nil {
		if err := o.Initiator.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation" + "." + "authorizationOptions" + "." + "initiator")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator post customer created body embedded default payment instrument embedded instrument identifier processing information authorization options initiator
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator struct {

	// merchant initiated transaction
	MerchantInitiatedTransaction *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction `json:"merchantInitiatedTransaction,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier processing information authorization options initiator
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMerchantInitiatedTransaction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) validateMerchantInitiatedTransaction(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantInitiatedTransaction) { // not required
		return nil
	}

	if o.MerchantInitiatedTransaction != nil {
		if err := o.MerchantInitiatedTransaction.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation" + "." + "authorizationOptions" + "." + "initiator" + "." + "merchantInitiatedTransaction")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction post customer created body embedded default payment instrument embedded instrument identifier processing information authorization options initiator merchant initiated transaction
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction struct {

	// Network transaction identifier that was returned in the payment response field _processorInformation.transactionID_
	// in the reply message for either the original merchant-initiated payment in the series or the previous
	// merchant-initiated payment in the series.
	//
	// Max Length: 15
	PreviousTransactionID string `json:"previousTransactionId,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier processing information authorization options initiator merchant initiated transaction
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePreviousTransactionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) validatePreviousTransactionID(formats strfmt.Registry) error {

	if swag.IsZero(o.PreviousTransactionID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"processingInformation"+"."+"authorizationOptions"+"."+"initiator"+"."+"merchantInitiatedTransaction"+"."+"previousTransactionId", "body", string(o.PreviousTransactionID), 15); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard post customer created body embedded default payment instrument embedded instrument identifier tokenized card
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard struct {

	// card
	Card *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard `json:"card,omitempty"`

	// Generated value used in conjunction with the network token for making a payment.
	//
	// Read Only: true
	Cryptogram string `json:"cryptogram,omitempty"`

	// Two-digit month in which the network token expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Read Only: true
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the network token expires.
	//
	// Format: `YYYY`.
	//
	// Read Only: true
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The token requestors customer’s payment network token
	//
	// Read Only: true
	Number string `json:"number,omitempty"`

	// Issuers state for the network token
	// Valid values:
	// - ACTIVE
	// - SUSPENDED : This state can change to ACTIVE or DELETED.
	// - DELETED : This is a final state for the network token.
	//
	// Read Only: true
	State string `json:"state,omitempty"`

	// The network token card association brand
	// Valid values:
	// - visa
	// - mastercard
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier tokenized card
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "tokenizedCard" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard The latest card details associated with the network token
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard struct {

	//
	// Two-digit month in which the customer’s latest payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Read Only: true
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the customer’s latest payment card expires.
	//
	// Format: `YYYY`.
	//
	// Read Only: true
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The customer’s latest payment card number suffix
	//
	// Read Only: true
	Suffix string `json:"suffix,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument embedded instrument identifier tokenized card card
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier post customer created body embedded default payment instrument instrument identifier
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier struct {

	// The id of the Instrument Identifier token linked to the Payment Instrument.
	//
	// Max Length: 32
	// Min Length: 12
	ID string `json:"id,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument instrument identifier
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"instrumentIdentifier"+"."+"id", "body", string(o.ID), 12); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"instrumentIdentifier"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks post customer created body embedded default payment instrument links
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks struct {

	// customer
	Customer *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument links
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer post customer created body embedded default payment instrument links customer
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer struct {

	// Link to the Customer.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument links customer
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf post customer created body embedded default payment instrument links self
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf struct {

	// Link to the Payment Instrument.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument links self
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation post customer created body embedded default payment instrument merchant information
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation struct {

	// merchant descriptor
	MerchantDescriptor *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor `json:"merchantDescriptor,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument merchant information
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMerchantDescriptor(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) validateMerchantDescriptor(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantDescriptor) { // not required
		return nil
	}

	if o.MerchantDescriptor != nil {
		if err := o.MerchantDescriptor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "merchantInformation" + "." + "merchantDescriptor")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor post customer created body embedded default payment instrument merchant information merchant descriptor
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor struct {

	// Alternate contact information for your business,such as an email address or URL.
	// This value might be displayed on the cardholder’s statement.
	// When you do not include this value in your capture or credit request, CyberSource uses the merchant URL from your CyberSource account.
	// Important This value must consist of English characters
	//
	// Max Length: 13
	AlternateName string `json:"alternateName,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument merchant information merchant descriptor
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAlternateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) validateAlternateName(formats strfmt.Registry) error {

	if swag.IsZero(o.AlternateName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"merchantInformation"+"."+"merchantDescriptor"+"."+"alternateName", "body", string(o.AlternateName), 13); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata post customer created body embedded default payment instrument metadata
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata struct {

	// The creator of the Payment Instrument token.
	//
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument metadata
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation post customer created body embedded default payment instrument processing information
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation struct {

	// bank transfer options
	BankTransferOptions *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions `json:"bankTransferOptions,omitempty"`

	// Flag that indicates that this is a payment for a bill or for an existing contractual loan.
	// For processor-specific details, see the `bill_payment` field description in [Credit Card Services Using the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/)
	//
	// Valid values:
	// - `true`: Bill payment or loan payment.
	// - `false` (default): Not a bill payment or loan payment.
	//
	BillPaymentProgramEnabled bool `json:"billPaymentProgramEnabled,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument processing information
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBankTransferOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) validateBankTransferOptions(formats strfmt.Registry) error {

	if swag.IsZero(o.BankTransferOptions) { // not required
		return nil
	}

	if o.BankTransferOptions != nil {
		if err := o.BankTransferOptions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "processingInformation" + "." + "bankTransferOptions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions post customer created body embedded default payment instrument processing information bank transfer options
swagger:model PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions
*/
type PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions struct {

	// Specifies the authorization method for the transaction.
	//
	// #### TeleCheck
	// Valid values:
	// - `ARC`: account receivable conversion
	// - `CCD`: corporate cash disbursement
	// - `POP`: point of purchase conversion
	// - `PPD`: prearranged payment and deposit entry
	// - `TEL`: telephone-initiated entry
	// - `WEB`: internet-initiated entry
	//
	// For details, see `ecp_sec_code` field description in the [Electronic Check Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/EChecks_SCMP_API/html/)
	//
	// Max Length: 3
	SECCode string `json:"SECCode,omitempty"`
}

// Validate validates this post customer created body embedded default payment instrument processing information bank transfer options
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSECCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) validateSECCode(formats strfmt.Registry) error {

	if swag.IsZero(o.SECCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"processingInformation"+"."+"bankTransferOptions"+"."+"SECCode", "body", string(o.SECCode), 3); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultShippingAddress post customer created body embedded default shipping address
swagger:model PostCustomerCreatedBodyEmbeddedDefaultShippingAddress
*/
type PostCustomerCreatedBodyEmbeddedDefaultShippingAddress struct {

	// links
	Links *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks `json:"_links,omitempty"`

	// The id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo `json:"shipTo,omitempty"`
}

// Validate validates this post customer created body embedded default shipping address
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) validateShipTo(formats strfmt.Registry) error {

	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddress) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks post customer created body embedded default shipping address links
swagger:model PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks
*/
type PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks struct {

	// customer
	Customer *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer created body embedded default shipping address links
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer post customer created body embedded default shipping address links customer
swagger:model PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer
*/
type PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer struct {

	// Link to the Customer
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body embedded default shipping address links customer
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf post customer created body embedded default shipping address links self
swagger:model PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf
*/
type PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body embedded default shipping address links self
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultShippingAddressLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata post customer created body embedded default shipping address metadata
swagger:model PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata
*/
type PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata struct {

	// The creator of the Shipping Address token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer created body embedded default shipping address metadata
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultShippingAddressMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo post customer created body embedded default shipping address ship to
swagger:model PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo
*/
type PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer created body embedded default shipping address ship to
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"company", "body", string(o.Company), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"email", "body", string(o.Email), 320); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyEmbeddedDefaultShippingAddressShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyLinks post customer created body links
swagger:model PostCustomerCreatedBodyLinks
*/
type PostCustomerCreatedBodyLinks struct {

	// payment instruments
	PaymentInstruments *PostCustomerCreatedBodyLinksPaymentInstruments `json:"paymentInstruments,omitempty"`

	// self
	Self *PostCustomerCreatedBodyLinksSelf `json:"self,omitempty"`

	// shipping address
	ShippingAddress *PostCustomerCreatedBodyLinksShippingAddress `json:"shippingAddress,omitempty"`
}

// Validate validates this post customer created body links
func (o *PostCustomerCreatedBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePaymentInstruments(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyLinks) validatePaymentInstruments(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentInstruments) { // not required
		return nil
	}

	if o.PaymentInstruments != nil {
		if err := o.PaymentInstruments.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_links" + "." + "paymentInstruments")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerCreatedBodyLinks) validateShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.ShippingAddress) { // not required
		return nil
	}

	if o.ShippingAddress != nil {
		if err := o.ShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerCreated" + "." + "_links" + "." + "shippingAddress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyLinksPaymentInstruments post customer created body links payment instruments
swagger:model PostCustomerCreatedBodyLinksPaymentInstruments
*/
type PostCustomerCreatedBodyLinksPaymentInstruments struct {

	// Link to the Customers Payment Instruments.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body links payment instruments
func (o *PostCustomerCreatedBodyLinksPaymentInstruments) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinksPaymentInstruments) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinksPaymentInstruments) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyLinksPaymentInstruments
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyLinksSelf post customer created body links self
swagger:model PostCustomerCreatedBodyLinksSelf
*/
type PostCustomerCreatedBodyLinksSelf struct {

	// Link to the Customer.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body links self
func (o *PostCustomerCreatedBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyLinksShippingAddress post customer created body links shipping address
swagger:model PostCustomerCreatedBodyLinksShippingAddress
*/
type PostCustomerCreatedBodyLinksShippingAddress struct {

	// Link to the Customers Shipping Addresses.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer created body links shipping address
func (o *PostCustomerCreatedBodyLinksShippingAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinksShippingAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyLinksShippingAddress) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyLinksShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyMerchantDefinedInformationItems0 post customer created body merchant defined information items0
swagger:model PostCustomerCreatedBodyMerchantDefinedInformationItems0
*/
type PostCustomerCreatedBodyMerchantDefinedInformationItems0 struct {

	// The number you assign as the name for your merchant-defined data or secure field. Valid values are data1 to data4 and sensitive1 to sensitive4
	//
	// For example, to set the name for merchant-defined data 2 field, you would reference merchantDefinedInformation[x].name as data2
	// Valid values:
	// - data1
	// - data2
	// - data3
	// - data4
	// - sensitive1
	// - sensitive2
	// - sensitive3
	// - sensitive4
	//
	Name string `json:"name,omitempty"`

	// The value you assign for your merchant-defined data field.
	//
	// **Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not
	// limited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,
	// CVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.
	//
	// Max Length: 100
	Value string `json:"value,omitempty"`
}

// Validate validates this post customer created body merchant defined information items0
func (o *PostCustomerCreatedBodyMerchantDefinedInformationItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyMerchantDefinedInformationItems0) validateValue(formats strfmt.Registry) error {

	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if err := validate.MaxLength("value", "body", string(o.Value), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyMerchantDefinedInformationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyMerchantDefinedInformationItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyMerchantDefinedInformationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyMetadata post customer created body metadata
swagger:model PostCustomerCreatedBodyMetadata
*/
type PostCustomerCreatedBodyMetadata struct {

	// The creator of the Customer token.
	//
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer created body metadata
func (o *PostCustomerCreatedBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerCreatedBodyObjectInformation post customer created body object information
swagger:model PostCustomerCreatedBodyObjectInformation
*/
type PostCustomerCreatedBodyObjectInformation struct {

	// Comments that you can make about the customer.
	//
	// Max Length: 150
	Comment string `json:"comment,omitempty"`

	// Name or title of the customer.
	//
	// Max Length: 60
	Title string `json:"title,omitempty"`
}

// Validate validates this post customer created body object information
func (o *PostCustomerCreatedBodyObjectInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComment(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerCreatedBodyObjectInformation) validateComment(formats strfmt.Registry) error {

	if swag.IsZero(o.Comment) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"objectInformation"+"."+"comment", "body", string(o.Comment), 150); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerCreatedBodyObjectInformation) validateTitle(formats strfmt.Registry) error {

	if swag.IsZero(o.Title) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerCreated"+"."+"objectInformation"+"."+"title", "body", string(o.Title), 60); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerCreatedBodyObjectInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerCreatedBodyObjectInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerCreatedBodyObjectInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerFailedDependencyBody post customer failed dependency body
swagger:model PostCustomerFailedDependencyBody
*/
type PostCustomerFailedDependencyBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerFailedDependencyBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer failed dependency body
func (o *PostCustomerFailedDependencyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerFailedDependencyBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerFailedDependencyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerFailedDependencyBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerFailedDependencyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerFailedDependencyBodyErrorsItems0 post customer failed dependency body errors items0
swagger:model PostCustomerFailedDependencyBodyErrorsItems0
*/
type PostCustomerFailedDependencyBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer failed dependency body errors items0
func (o *PostCustomerFailedDependencyBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerFailedDependencyBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerFailedDependencyBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerFailedDependencyBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerFailedDependencyBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0 post customer failed dependency body errors items0 details items0
swagger:model PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0
*/
type PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this post customer failed dependency body errors items0 details items0
func (o *PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerFailedDependencyBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerForbiddenBody post customer forbidden body
swagger:model PostCustomerForbiddenBody
*/
type PostCustomerForbiddenBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerForbiddenBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer forbidden body
func (o *PostCustomerForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerForbiddenBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerForbiddenBodyErrorsItems0 post customer forbidden body errors items0
swagger:model PostCustomerForbiddenBodyErrorsItems0
*/
type PostCustomerForbiddenBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PostCustomerForbiddenBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer forbidden body errors items0
func (o *PostCustomerForbiddenBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerForbiddenBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerForbiddenBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerForbiddenBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerForbiddenBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerForbiddenBodyErrorsItems0DetailsItems0 post customer forbidden body errors items0 details items0
swagger:model PostCustomerForbiddenBodyErrorsItems0DetailsItems0
*/
type PostCustomerForbiddenBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this post customer forbidden body errors items0 details items0
func (o *PostCustomerForbiddenBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerForbiddenBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerForbiddenBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerForbiddenBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerInternalServerErrorBody post customer internal server error body
swagger:model PostCustomerInternalServerErrorBody
*/
type PostCustomerInternalServerErrorBody struct {

	// errors
	// Read Only: true
	Errors []*PostCustomerInternalServerErrorBodyErrorsItems0 `json:"errors"`
}

// Validate validates this post customer internal server error body
func (o *PostCustomerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerInternalServerErrorBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PostCustomerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerInternalServerErrorBodyErrorsItems0 post customer internal server error body errors items0
swagger:model PostCustomerInternalServerErrorBodyErrorsItems0
*/
type PostCustomerInternalServerErrorBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer internal server error body errors items0
func (o *PostCustomerInternalServerErrorBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerInternalServerErrorBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerInternalServerErrorBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerInternalServerErrorBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerInternalServerErrorBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0 post customer internal server error body errors items0 details items0
swagger:model PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0
*/
type PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this post customer internal server error body errors items0 details items0
func (o *PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerInternalServerErrorBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyBuyerInformation post customer params body buyer information
swagger:model PostCustomerParamsBodyBuyerInformation
*/
type PostCustomerParamsBodyBuyerInformation struct {

	// Customer's primary email address, including the full domain name.
	//
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Your identifier for the customer.
	//
	// Max Length: 100
	MerchantCustomerID string `json:"merchantCustomerID,omitempty"`
}

// Validate validates this post customer params body buyer information
func (o *PostCustomerParamsBodyBuyerInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantCustomerID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyBuyerInformation) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"buyerInformation"+"."+"email", "body", string(o.Email), 255); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyBuyerInformation) validateMerchantCustomerID(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantCustomerID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"buyerInformation"+"."+"merchantCustomerID", "body", string(o.MerchantCustomerID), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyBuyerInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyBuyerInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyBuyerInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyClientReferenceInformation post customer params body client reference information
swagger:model PostCustomerParamsBodyClientReferenceInformation
*/
type PostCustomerParamsBodyClientReferenceInformation struct {

	// Client-generated order reference or tracking number.
	//
	// Max Length: 50
	Code string `json:"code,omitempty"`
}

// Validate validates this post customer params body client reference information
func (o *PostCustomerParamsBodyClientReferenceInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyClientReferenceInformation) validateCode(formats strfmt.Registry) error {

	if swag.IsZero(o.Code) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"clientReferenceInformation"+"."+"code", "body", string(o.Code), 50); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyClientReferenceInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyClientReferenceInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyClientReferenceInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyDefaultPaymentInstrument post customer params body default payment instrument
swagger:model PostCustomerParamsBodyDefaultPaymentInstrument
*/
type PostCustomerParamsBodyDefaultPaymentInstrument struct {

	// The id of the Customers default Payment Instrument
	//
	ID string `json:"id,omitempty"`
}

// Validate validates this post customer params body default payment instrument
func (o *PostCustomerParamsBodyDefaultPaymentInstrument) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyDefaultPaymentInstrument) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyDefaultPaymentInstrument) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyDefaultPaymentInstrument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyDefaultShippingAddress post customer params body default shipping address
swagger:model PostCustomerParamsBodyDefaultShippingAddress
*/
type PostCustomerParamsBodyDefaultShippingAddress struct {

	// The id of the Customers default Shipping Address
	//
	ID string `json:"id,omitempty"`
}

// Validate validates this post customer params body default shipping address
func (o *PostCustomerParamsBodyDefaultShippingAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyDefaultShippingAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyDefaultShippingAddress) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyDefaultShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbedded Additional resources for the Customer token.
//
swagger:model PostCustomerParamsBodyEmbedded
*/
type PostCustomerParamsBodyEmbedded struct {

	// default payment instrument
	DefaultPaymentInstrument *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument `json:"defaultPaymentInstrument,omitempty"`

	// default shipping address
	DefaultShippingAddress *PostCustomerParamsBodyEmbeddedDefaultShippingAddress `json:"defaultShippingAddress,omitempty"`
}

// Validate validates this post customer params body embedded
func (o *PostCustomerParamsBodyEmbedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDefaultPaymentInstrument(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDefaultShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbedded) validateDefaultPaymentInstrument(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultPaymentInstrument) { // not required
		return nil
	}

	if o.DefaultPaymentInstrument != nil {
		if err := o.DefaultPaymentInstrument.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbedded) validateDefaultShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.DefaultShippingAddress) { // not required
		return nil
	}

	if o.DefaultShippingAddress != nil {
		if err := o.DefaultShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultShippingAddress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbedded) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument post customer params body embedded default payment instrument
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument struct {

	// embedded
	Embedded *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded `json:"_embedded,omitempty"`

	// links
	Links *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks `json:"_links,omitempty"`

	// bank account
	BankAccount *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount `json:"bankAccount,omitempty"`

	// bill to
	BillTo *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo `json:"billTo,omitempty"`

	// buyer information
	BuyerInformation *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation `json:"buyerInformation,omitempty"`

	// card
	Card *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard `json:"card,omitempty"`

	// The id of the Payment Instrument Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// instrument identifier
	InstrumentIdentifier *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier `json:"instrumentIdentifier,omitempty"`

	// merchant information
	MerchantInformation *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation `json:"merchantInformation,omitempty"`

	// metadata
	Metadata *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata `json:"metadata,omitempty"`

	// The type of token.
	//
	// Valid values:
	// - paymentInstrument
	//
	// Read Only: true
	Object string `json:"object,omitempty"`

	// processing information
	ProcessingInformation *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation `json:"processingInformation,omitempty"`

	// Issuers state for the card number.
	// Valid values:
	// - ACTIVE
	// - CLOSED : The account has been closed.
	//
	// Read Only: true
	State string `json:"state,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBankAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBillTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBuyerInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInstrumentIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMerchantInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProcessingInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(o.Embedded) { // not required
		return nil
	}

	if o.Embedded != nil {
		if err := o.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateBankAccount(formats strfmt.Registry) error {

	if swag.IsZero(o.BankAccount) { // not required
		return nil
	}

	if o.BankAccount != nil {
		if err := o.BankAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "bankAccount")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateBillTo(formats strfmt.Registry) error {

	if swag.IsZero(o.BillTo) { // not required
		return nil
	}

	if o.BillTo != nil {
		if err := o.BillTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateBuyerInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.BuyerInformation) { // not required
		return nil
	}

	if o.BuyerInformation != nil {
		if err := o.BuyerInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "buyerInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateInstrumentIdentifier(formats strfmt.Registry) error {

	if swag.IsZero(o.InstrumentIdentifier) { // not required
		return nil
	}

	if o.InstrumentIdentifier != nil {
		if err := o.InstrumentIdentifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "instrumentIdentifier")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateMerchantInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantInformation) { // not required
		return nil
	}

	if o.MerchantInformation != nil {
		if err := o.MerchantInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "merchantInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) validateProcessingInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ProcessingInformation) { // not required
		return nil
	}

	if o.ProcessingInformation != nil {
		if err := o.ProcessingInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "processingInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrument
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount post customer params body embedded default payment instrument bank account
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount struct {

	// Account type.
	//
	// Valid values:
	//  - checking : C
	//  - general ledger : G This value is supported only on Wells Fargo ACH
	//  - savings : S (U.S. dollars only)
	//  - corporate checking : X (U.S. dollars only)
	//
	// Max Length: 1
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument bank account
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"bankAccount"+"."+"type", "body", string(o.Type), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBankAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo post customer params body embedded default payment instrument bill to
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo struct {

	// Payment card billing street address as it appears on the credit card issuer’s records.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Additional address information.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the billing address. Use the State, Province, and Territory Codes for the United States
	// and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Name of the customer’s company.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Payment card billing country. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Customer's email address, including the full domain name.
	//
	// Max Length: 255
	Email string `json:"email,omitempty"`

	// Customer’s first name. This name must be the same as the name on the card.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Customer’s last name. This name must be the same as the name on the card.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// Payment card billing city.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Customer’s phone number.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// **Example** `12345-6789`
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// **Example** `A1B 2C3`
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument bill to
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"company", "body", string(o.Company), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"email", "body", string(o.Email), 255); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"billTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBillTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation post customer params body embedded default payment instrument buyer information
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation struct {

	// Company’s tax identifier. This is only used for eCheck service.
	//
	// Max Length: 9
	CompanyTaxID string `json:"companyTaxID,omitempty"`

	// Currency used for the order. Use the three-character I[ISO Standard Currency Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/currencies.pdf)
	//
	// For details about currency as used in partial authorizations, see "Features for Debit Cards and Prepaid Cards" in the [Credit Card Services Using the SCMP API Guide](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/)
	//
	// For an authorization reversal (`reversalInformation`) or a capture (`processingOptions.capture` is set to `true`), you must use the same currency that you used in your payment authorization request.
	//
	// #### DCC for First Data
	// Your local currency. For details, see the `currency` field description in [Dynamic Currency Conversion For First Data Using the SCMP API](http://apps.cybersource.com/library/documentation/dev_guides/DCC_FirstData_SCMP/DCC_FirstData_SCMP_API.pdf).
	//
	// Max Length: 3
	Currency string `json:"currency,omitempty"`

	// Date of birth of the customer. Format: YYYY-MM-DD
	//
	// Format: date
	DateOfBirth strfmt.Date `json:"dateOfBirth,omitempty"`

	// personal identification
	PersonalIdentification []*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0 `json:"personalIdentification"`
}

// Validate validates this post customer params body embedded default payment instrument buyer information
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompanyTaxID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDateOfBirth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePersonalIdentification(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validateCompanyTaxID(formats strfmt.Registry) error {

	if swag.IsZero(o.CompanyTaxID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"buyerInformation"+"."+"companyTaxID", "body", string(o.CompanyTaxID), 9); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(o.Currency) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"buyerInformation"+"."+"currency", "body", string(o.Currency), 3); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validateDateOfBirth(formats strfmt.Registry) error {

	if swag.IsZero(o.DateOfBirth) { // not required
		return nil
	}

	if err := validate.FormatOf("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"buyerInformation"+"."+"dateOfBirth", "body", "date", o.DateOfBirth.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) validatePersonalIdentification(formats strfmt.Registry) error {

	if swag.IsZero(o.PersonalIdentification) { // not required
		return nil
	}

	for i := 0; i < len(o.PersonalIdentification); i++ {
		if swag.IsZero(o.PersonalIdentification[i]) { // not required
			continue
		}

		if o.PersonalIdentification[i] != nil {
			if err := o.PersonalIdentification[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "buyerInformation" + "." + "personalIdentification" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0 post customer params body embedded default payment instrument buyer information personal identification items0
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0 struct {

	// The value of the identification type.
	//
	// Max Length: 26
	ID string `json:"id,omitempty"`

	// issued by
	IssuedBy *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy `json:"issuedBy,omitempty"`

	// The type of the identification.
	//
	// Valid values:
	//   - driver license
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument buyer information personal identification items0
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuedBy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MaxLength("id", "body", string(o.ID), 26); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) validateIssuedBy(formats strfmt.Registry) error {

	if swag.IsZero(o.IssuedBy) { // not required
		return nil
	}

	if o.IssuedBy != nil {
		if err := o.IssuedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("issuedBy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy post customer params body embedded default payment instrument buyer information personal identification items0 issued by
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy struct {

	// The State or province where the customer’s driver’s license was issued.
	//
	// Use the two-character State, Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument buyer information personal identification items0 issued by
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("issuedBy"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentBuyerInformationPersonalIdentificationItems0IssuedBy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard post customer params body embedded default payment instrument card
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard struct {

	// Two-digit month in which the payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the credit card expires.
	//
	// Format: `YYYY`.
	//
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// Number of times a Maestro (UK Domestic) card has been issued to the account holder. The card might or might not have an issue number. The number can consist of one or two digits, and the first digit might be a zero. When you include this value in your request, include exactly what is printed on the card. A value of 2 is different than a value of 02. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card.
	//
	// **Note** The issue number is not required for Maestro (UK Domestic) transactions.
	//
	// Max Length: 2
	IssueNumber string `json:"issueNumber,omitempty"`

	// Month of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: MM`.
	// Valid values: 01 through 12.
	//
	// **Note** The start date is not required for Maestro (UK Domestic) transactions.
	//
	// Max Length: 2
	StartMonth string `json:"startMonth,omitempty"`

	// Year of the start of the Maestro (UK Domestic) card validity period. Do not include the field, even with a blank value, if the card is not a Maestro (UK Domestic) card. `Format: YYYY`.
	//
	// **Note** The start date is not required for Maestro (UK Domestic) transactions.
	//
	// Max Length: 4
	StartYear string `json:"startYear,omitempty"`

	// tokenized information
	TokenizedInformation *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation `json:"tokenizedInformation,omitempty"`

	// Value that indicates the card type. Valid v2 : v1 - description values:
	//   * 001 : visa
	//   * 002 : mastercard - Eurocard—European regional brand of Mastercard
	//   * 003 : american express
	//   * 004 : discover
	//   * 005 : diners club
	//   * 006 : carte blanche
	//   * 007 : jcb
	//   * 008 : optima
	//   * 011 : twinpay credit
	//   * 012 : twinpay debit
	//   * 013 : walmart
	//   * 014 : enRoute
	//   * 015 : lowes consumer
	//   * 016 : home depot consumer
	//   * 017 : mbna
	//   * 018 : dicks sportswear
	//   * 019 : casual corner
	//   * 020 : sears
	//   * 021 : jal
	//   * 023 : disney
	//   * 024 : maestro uk domestic
	//   * 025 : sams club consumer
	//   * 026 : sams club business
	//   * 028 : bill me later
	//   * 029 : bebe
	//   * 030 : restoration hardware
	//   * 031 : delta online — use this value only for Ingenico ePayments. For other processors, use 001 for all Visa card types.
	//   * 032 : solo
	//   * 033 : visa electron
	//   * 034 : dankort
	//   * 035 : laser
	//   * 036 : carte bleue — formerly Cartes Bancaires
	//   * 037 : carta si
	//   * 038 : pinless debit
	//   * 039 : encoded account
	//   * 040 : uatp
	//   * 041 : household
	//   * 042 : maestro international
	//   * 043 : ge money uk
	//   * 044 : korean cards
	//   * 045 : style
	//   * 046 : jcrew
	//   * 047 : payease china processing ewallet
	//   * 048 : payease china processing bank transfer
	//   * 049 : meijer private label
	//   * 050 : hipercard — supported only by the Comercio Latino processor.
	//   * 051 : aura — supported only by the Comercio Latino processor.
	//   * 052 : redecard
	//   * 054 : elo — supported only by the Comercio Latino processor.
	//   * 055 : capital one private label
	//   * 056 : synchrony private label
	//   * 057 : costco private label
	//   * 060 : mada
	//   * 062 : china union pay
	//   * 063 : falabella private label
	//
	Type string `json:"type,omitempty"`

	// 'Payment Instrument was created / updated as part of a pinless debit transaction.'
	//
	UseAs string `json:"useAs,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument card
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssueNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStartYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokenizedInformation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) validateIssueNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.IssueNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"issueNumber", "body", string(o.IssueNumber), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) validateStartMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.StartMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"startMonth", "body", string(o.StartMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) validateStartYear(formats strfmt.Registry) error {

	if swag.IsZero(o.StartYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"startYear", "body", string(o.StartYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) validateTokenizedInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.TokenizedInformation) { // not required
		return nil
	}

	if o.TokenizedInformation != nil {
		if err := o.TokenizedInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "card" + "." + "tokenizedInformation")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation post customer params body embedded default payment instrument card tokenized information
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation struct {

	// Value that identifies your business and indicates that the cardholder’s account number is tokenized. This value
	// is assigned by the token service provider and is unique within the token service provider’s database.
	//
	// **Note** This field is supported only for **CyberSource through VisaNet** and **FDC Nashville Global**.
	//
	// Max Length: 11
	RequestorID string `json:"requestorID,omitempty"`

	// Type of transaction that provided the token data. This value does not specify the token service provider; it
	// specifies the entity that provided you with information about the token.
	//
	// Set the value for this field to 1. An application on the customer’s mobile device provided the token data.
	//
	// Max Length: 1
	TransactionType string `json:"transactionType,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument card tokenized information
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRequestorID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTransactionType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) validateRequestorID(formats strfmt.Registry) error {

	if swag.IsZero(o.RequestorID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"tokenizedInformation"+"."+"requestorID", "body", string(o.RequestorID), 11); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) validateTransactionType(formats strfmt.Registry) error {

	if swag.IsZero(o.TransactionType) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"card"+"."+"tokenizedInformation"+"."+"transactionType", "body", string(o.TransactionType), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentCardTokenizedInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded Additional resources for the Payment Instrument token.
//
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded struct {

	// instrument identifier
	InstrumentIdentifier *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier `json:"instrumentIdentifier,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInstrumentIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded) validateInstrumentIdentifier(formats strfmt.Registry) error {

	if swag.IsZero(o.InstrumentIdentifier) { // not required
		return nil
	}

	if o.InstrumentIdentifier != nil {
		if err := o.InstrumentIdentifier.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier post customer params body embedded default payment instrument embedded instrument identifier
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier struct {

	// links
	Links *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks `json:"_links,omitempty"`

	// bank account
	BankAccount *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount `json:"bankAccount,omitempty"`

	// bill to
	BillTo *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo `json:"billTo,omitempty"`

	// card
	Card *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard `json:"card,omitempty"`

	// The id of the Instrument Identifier Token.
	//
	ID string `json:"id,omitempty"`

	// issuer
	Issuer *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer `json:"issuer,omitempty"`

	// metadata
	Metadata *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata `json:"metadata,omitempty"`

	// The type of token.
	//
	// Valid values:
	// - instrumentIdentifier
	//
	// Read Only: true
	Object string `json:"object,omitempty"`

	// processing information
	ProcessingInformation *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation `json:"processingInformation,omitempty"`

	// Issuers state for the card number.
	// Valid values:
	// - ACTIVE
	// - CLOSED : The account has been closed.
	//
	// Read Only: true
	State string `json:"state,omitempty"`

	// tokenized card
	TokenizedCard *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard `json:"tokenizedCard,omitempty"`

	// The type of Instrument Identifier.
	// Valid values:
	// - enrollable card
	//
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBankAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBillTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIssuer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProcessingInformation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTokenizedCard(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateBankAccount(formats strfmt.Registry) error {

	if swag.IsZero(o.BankAccount) { // not required
		return nil
	}

	if o.BankAccount != nil {
		if err := o.BankAccount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "bankAccount")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateBillTo(formats strfmt.Registry) error {

	if swag.IsZero(o.BillTo) { // not required
		return nil
	}

	if o.BillTo != nil {
		if err := o.BillTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "billTo")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateIssuer(formats strfmt.Registry) error {

	if swag.IsZero(o.Issuer) { // not required
		return nil
	}

	if o.Issuer != nil {
		if err := o.Issuer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "issuer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateProcessingInformation(formats strfmt.Registry) error {

	if swag.IsZero(o.ProcessingInformation) { // not required
		return nil
	}

	if o.ProcessingInformation != nil {
		if err := o.ProcessingInformation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) validateTokenizedCard(formats strfmt.Registry) error {

	if swag.IsZero(o.TokenizedCard) { // not required
		return nil
	}

	if o.TokenizedCard != nil {
		if err := o.TokenizedCard.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "tokenizedCard")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount post customer params body embedded default payment instrument embedded instrument identifier bank account
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount struct {

	// Account number.
	//
	// When processing encoded account numbers, use this field for the encoded account number.
	//
	// Max Length: 17
	Number string `json:"number,omitempty"`

	// Bank routing number. This is also called the transit number.
	//
	// For details, see `ecp_rdfi` field description in the [Electronic Check Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/EChecks_SCMP_API/html/)
	//
	RoutingNumber string `json:"routingNumber,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier bank account
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) validateNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.Number) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"bankAccount"+"."+"number", "body", string(o.Number), 17); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBankAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo This information is sent to the issuer as part of network token enrollment and is not stored under the Instrument Identifier token.
//
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo struct {

	// Payment card billing street address as it appears on the credit card issuer’s records.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Additional address information.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the billing address. Use the State, Province, and Territory Codes for the United States
	// and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Payment card billing country. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Payment card billing city.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Postal code for the billing address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// **Example** `12345-6789`
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// **Example** `A1B 2C3`
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier bill to
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"billTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierBillTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard The expirationMonth, expirationYear and securityCode is sent to the issuer as part of network token enrollment and is not stored under the Instrument Identifier token.
//
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard struct {

	// Two-digit month in which the payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the credit card expires.
	//
	// Format: `YYYY`.
	//
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The customer’s payment card number, also known as the Primary Account Number (PAN). You can also use this field
	// for encoded account numbers.
	//
	// Max Length: 19
	// Min Length: 12
	Number string `json:"number,omitempty"`

	// Card Verification Number.
	//
	// Max Length: 4
	SecurityCode string `json:"securityCode,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier card
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSecurityCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.Number) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"number", "body", string(o.Number), 12); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"number", "body", string(o.Number), 19); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) validateSecurityCode(formats strfmt.Registry) error {

	if swag.IsZero(o.SecurityCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"card"+"."+"securityCode", "body", string(o.SecurityCode), 4); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer post customer params body embedded default payment instrument embedded instrument identifier issuer
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer struct {

	// This reference number serves as a link to the cardholder account and to all transactions for that account.
	//
	// Read Only: true
	// Max Length: 32
	PaymentAccountReference string `json:"paymentAccountReference,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier issuer
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePaymentAccountReference(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) validatePaymentAccountReference(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentAccountReference) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"issuer"+"."+"paymentAccountReference", "body", string(o.PaymentAccountReference), 32); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierIssuer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks post customer params body embedded default payment instrument embedded instrument identifier links
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks struct {

	// payment instruments
	PaymentInstruments *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments `json:"paymentInstruments,omitempty"`

	// self
	Self *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier links
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePaymentInstruments(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) validatePaymentInstruments(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentInstruments) { // not required
		return nil
	}

	if o.PaymentInstruments != nil {
		if err := o.PaymentInstruments.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "_links" + "." + "paymentInstruments")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments post customer params body embedded default payment instrument embedded instrument identifier links payment instruments
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments struct {

	// Link to the Instrument Identifiers Payment Instruments.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier links payment instruments
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksPaymentInstruments
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf post customer params body embedded default payment instrument embedded instrument identifier links self
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf struct {

	// Link to the Instrument Identifier.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier links self
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata post customer params body embedded default payment instrument embedded instrument identifier metadata
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata struct {

	// The creator of the Instrument Identifier token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier metadata
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation post customer params body embedded default payment instrument embedded instrument identifier processing information
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation struct {

	// authorization options
	AuthorizationOptions *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions `json:"authorizationOptions,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier processing information
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAuthorizationOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) validateAuthorizationOptions(formats strfmt.Registry) error {

	if swag.IsZero(o.AuthorizationOptions) { // not required
		return nil
	}

	if o.AuthorizationOptions != nil {
		if err := o.AuthorizationOptions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation" + "." + "authorizationOptions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions post customer params body embedded default payment instrument embedded instrument identifier processing information authorization options
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions struct {

	// initiator
	Initiator *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator `json:"initiator,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier processing information authorization options
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInitiator(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) validateInitiator(formats strfmt.Registry) error {

	if swag.IsZero(o.Initiator) { // not required
		return nil
	}

	if o.Initiator != nil {
		if err := o.Initiator.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation" + "." + "authorizationOptions" + "." + "initiator")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator post customer params body embedded default payment instrument embedded instrument identifier processing information authorization options initiator
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator struct {

	// merchant initiated transaction
	MerchantInitiatedTransaction *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction `json:"merchantInitiatedTransaction,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier processing information authorization options initiator
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMerchantInitiatedTransaction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) validateMerchantInitiatedTransaction(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantInitiatedTransaction) { // not required
		return nil
	}

	if o.MerchantInitiatedTransaction != nil {
		if err := o.MerchantInitiatedTransaction.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "processingInformation" + "." + "authorizationOptions" + "." + "initiator" + "." + "merchantInitiatedTransaction")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiator
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction post customer params body embedded default payment instrument embedded instrument identifier processing information authorization options initiator merchant initiated transaction
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction struct {

	// Network transaction identifier that was returned in the payment response field _processorInformation.transactionID_
	// in the reply message for either the original merchant-initiated payment in the series or the previous
	// merchant-initiated payment in the series.
	//
	// Max Length: 15
	PreviousTransactionID string `json:"previousTransactionId,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier processing information authorization options initiator merchant initiated transaction
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePreviousTransactionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) validatePreviousTransactionID(formats strfmt.Registry) error {

	if swag.IsZero(o.PreviousTransactionID) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"processingInformation"+"."+"authorizationOptions"+"."+"initiator"+"."+"merchantInitiatedTransaction"+"."+"previousTransactionId", "body", string(o.PreviousTransactionID), 15); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierProcessingInformationAuthorizationOptionsInitiatorMerchantInitiatedTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard post customer params body embedded default payment instrument embedded instrument identifier tokenized card
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard struct {

	// card
	Card *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard `json:"card,omitempty"`

	// Generated value used in conjunction with the network token for making a payment.
	//
	// Read Only: true
	Cryptogram string `json:"cryptogram,omitempty"`

	// Two-digit month in which the network token expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Read Only: true
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the network token expires.
	//
	// Format: `YYYY`.
	//
	// Read Only: true
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The token requestors customer’s payment network token
	//
	// Read Only: true
	Number string `json:"number,omitempty"`

	// Issuers state for the network token
	// Valid values:
	// - ACTIVE
	// - SUSPENDED : This state can change to ACTIVE or DELETED.
	// - DELETED : This is a final state for the network token.
	//
	// Read Only: true
	State string `json:"state,omitempty"`

	// The network token card association brand
	// Valid values:
	// - visa
	// - mastercard
	//
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier tokenized card
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) validateCard(formats strfmt.Registry) error {

	if swag.IsZero(o.Card) { // not required
		return nil
	}

	if o.Card != nil {
		if err := o.Card.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_embedded" + "." + "instrumentIdentifier" + "." + "tokenizedCard" + "." + "card")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard The latest card details associated with the network token
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard struct {

	//
	// Two-digit month in which the customer’s latest payment card expires.
	//
	// Format: `MM`.
	//
	// Valid values: `01` through `12`.
	//
	// Read Only: true
	// Max Length: 2
	ExpirationMonth string `json:"expirationMonth,omitempty"`

	// Four-digit year in which the customer’s latest payment card expires.
	//
	// Format: `YYYY`.
	//
	// Read Only: true
	// Max Length: 4
	ExpirationYear string `json:"expirationYear,omitempty"`

	// The customer’s latest payment card number suffix
	//
	// Read Only: true
	Suffix string `json:"suffix,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument embedded instrument identifier tokenized card card
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpirationMonth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExpirationYear(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) validateExpirationMonth(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationMonth) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"card"+"."+"expirationMonth", "body", string(o.ExpirationMonth), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) validateExpirationYear(formats strfmt.Registry) error {

	if swag.IsZero(o.ExpirationYear) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"_embedded"+"."+"instrumentIdentifier"+"."+"tokenizedCard"+"."+"card"+"."+"expirationYear", "body", string(o.ExpirationYear), 4); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentEmbeddedInstrumentIdentifierTokenizedCardCard
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier post customer params body embedded default payment instrument instrument identifier
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier struct {

	// The id of the Instrument Identifier token linked to the Payment Instrument.
	//
	// Max Length: 32
	// Min Length: 12
	ID string `json:"id,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument instrument identifier
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"instrumentIdentifier"+"."+"id", "body", string(o.ID), 12); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"instrumentIdentifier"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentInstrumentIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks post customer params body embedded default payment instrument links
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks struct {

	// customer
	Customer *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument links
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer post customer params body embedded default payment instrument links customer
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer struct {

	// Link to the Customer.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument links customer
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf post customer params body embedded default payment instrument links self
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf struct {

	// Link to the Payment Instrument.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument links self
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation post customer params body embedded default payment instrument merchant information
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation struct {

	// merchant descriptor
	MerchantDescriptor *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor `json:"merchantDescriptor,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument merchant information
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMerchantDescriptor(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) validateMerchantDescriptor(formats strfmt.Registry) error {

	if swag.IsZero(o.MerchantDescriptor) { // not required
		return nil
	}

	if o.MerchantDescriptor != nil {
		if err := o.MerchantDescriptor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "merchantInformation" + "." + "merchantDescriptor")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor post customer params body embedded default payment instrument merchant information merchant descriptor
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor struct {

	// Alternate contact information for your business,such as an email address or URL.
	// This value might be displayed on the cardholder’s statement.
	// When you do not include this value in your capture or credit request, CyberSource uses the merchant URL from your CyberSource account.
	// Important This value must consist of English characters
	//
	// Max Length: 13
	AlternateName string `json:"alternateName,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument merchant information merchant descriptor
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAlternateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) validateAlternateName(formats strfmt.Registry) error {

	if swag.IsZero(o.AlternateName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"merchantInformation"+"."+"merchantDescriptor"+"."+"alternateName", "body", string(o.AlternateName), 13); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMerchantInformationMerchantDescriptor
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata post customer params body embedded default payment instrument metadata
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata struct {

	// The creator of the Payment Instrument token.
	//
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument metadata
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation post customer params body embedded default payment instrument processing information
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation struct {

	// bank transfer options
	BankTransferOptions *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions `json:"bankTransferOptions,omitempty"`

	// Flag that indicates that this is a payment for a bill or for an existing contractual loan.
	// For processor-specific details, see the `bill_payment` field description in [Credit Card Services Using the SCMP API.](https://apps.cybersource.com/library/documentation/dev_guides/CC_Svcs_SCMP_API/html/)
	//
	// Valid values:
	// - `true`: Bill payment or loan payment.
	// - `false` (default): Not a bill payment or loan payment.
	//
	BillPaymentProgramEnabled bool `json:"billPaymentProgramEnabled,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument processing information
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBankTransferOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) validateBankTransferOptions(formats strfmt.Registry) error {

	if swag.IsZero(o.BankTransferOptions) { // not required
		return nil
	}

	if o.BankTransferOptions != nil {
		if err := o.BankTransferOptions.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultPaymentInstrument" + "." + "processingInformation" + "." + "bankTransferOptions")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions post customer params body embedded default payment instrument processing information bank transfer options
swagger:model PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions
*/
type PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions struct {

	// Specifies the authorization method for the transaction.
	//
	// #### TeleCheck
	// Valid values:
	// - `ARC`: account receivable conversion
	// - `CCD`: corporate cash disbursement
	// - `POP`: point of purchase conversion
	// - `PPD`: prearranged payment and deposit entry
	// - `TEL`: telephone-initiated entry
	// - `WEB`: internet-initiated entry
	//
	// For details, see `ecp_sec_code` field description in the [Electronic Check Services Using the SCMP API Guide.](https://apps.cybersource.com/library/documentation/dev_guides/EChecks_SCMP_API/html/)
	//
	// Max Length: 3
	SECCode string `json:"SECCode,omitempty"`
}

// Validate validates this post customer params body embedded default payment instrument processing information bank transfer options
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSECCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) validateSECCode(formats strfmt.Registry) error {

	if swag.IsZero(o.SECCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultPaymentInstrument"+"."+"processingInformation"+"."+"bankTransferOptions"+"."+"SECCode", "body", string(o.SECCode), 3); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultPaymentInstrumentProcessingInformationBankTransferOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultShippingAddress post customer params body embedded default shipping address
swagger:model PostCustomerParamsBodyEmbeddedDefaultShippingAddress
*/
type PostCustomerParamsBodyEmbeddedDefaultShippingAddress struct {

	// links
	Links *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks `json:"_links,omitempty"`

	// The id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo `json:"shipTo,omitempty"`
}

// Validate validates this post customer params body embedded default shipping address
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) validateShipTo(formats strfmt.Registry) error {

	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddress) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks post customer params body embedded default shipping address links
swagger:model PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks
*/
type PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks struct {

	// customer
	Customer *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf `json:"self,omitempty"`
}

// Validate validates this post customer params body embedded default shipping address links
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_embedded" + "." + "defaultShippingAddress" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer post customer params body embedded default shipping address links customer
swagger:model PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer
*/
type PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer struct {

	// Link to the Customer
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body embedded default shipping address links customer
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf post customer params body embedded default shipping address links self
swagger:model PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf
*/
type PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body embedded default shipping address links self
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultShippingAddressLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata post customer params body embedded default shipping address metadata
swagger:model PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata
*/
type PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata struct {

	// The creator of the Shipping Address token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer params body embedded default shipping address metadata
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultShippingAddressMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo post customer params body embedded default shipping address ship to
swagger:model PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo
*/
type PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this post customer params body embedded default shipping address ship to
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"company", "body", string(o.Company), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"email", "body", string(o.Email), 320); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"_embedded"+"."+"defaultShippingAddress"+"."+"shipTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyEmbeddedDefaultShippingAddressShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyLinks post customer params body links
swagger:model PostCustomerParamsBodyLinks
*/
type PostCustomerParamsBodyLinks struct {

	// payment instruments
	PaymentInstruments *PostCustomerParamsBodyLinksPaymentInstruments `json:"paymentInstruments,omitempty"`

	// self
	Self *PostCustomerParamsBodyLinksSelf `json:"self,omitempty"`

	// shipping address
	ShippingAddress *PostCustomerParamsBodyLinksShippingAddress `json:"shippingAddress,omitempty"`
}

// Validate validates this post customer params body links
func (o *PostCustomerParamsBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePaymentInstruments(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShippingAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyLinks) validatePaymentInstruments(formats strfmt.Registry) error {

	if swag.IsZero(o.PaymentInstruments) { // not required
		return nil
	}

	if o.PaymentInstruments != nil {
		if err := o.PaymentInstruments.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_links" + "." + "paymentInstruments")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

func (o *PostCustomerParamsBodyLinks) validateShippingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.ShippingAddress) { // not required
		return nil
	}

	if o.ShippingAddress != nil {
		if err := o.ShippingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postCustomerRequest" + "." + "_links" + "." + "shippingAddress")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinks) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyLinksPaymentInstruments post customer params body links payment instruments
swagger:model PostCustomerParamsBodyLinksPaymentInstruments
*/
type PostCustomerParamsBodyLinksPaymentInstruments struct {

	// Link to the Customers Payment Instruments.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body links payment instruments
func (o *PostCustomerParamsBodyLinksPaymentInstruments) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinksPaymentInstruments) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinksPaymentInstruments) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyLinksPaymentInstruments
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyLinksSelf post customer params body links self
swagger:model PostCustomerParamsBodyLinksSelf
*/
type PostCustomerParamsBodyLinksSelf struct {

	// Link to the Customer.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body links self
func (o *PostCustomerParamsBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyLinksShippingAddress post customer params body links shipping address
swagger:model PostCustomerParamsBodyLinksShippingAddress
*/
type PostCustomerParamsBodyLinksShippingAddress struct {

	// Link to the Customers Shipping Addresses.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this post customer params body links shipping address
func (o *PostCustomerParamsBodyLinksShippingAddress) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinksShippingAddress) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyLinksShippingAddress) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyLinksShippingAddress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyMerchantDefinedInformationItems0 post customer params body merchant defined information items0
swagger:model PostCustomerParamsBodyMerchantDefinedInformationItems0
*/
type PostCustomerParamsBodyMerchantDefinedInformationItems0 struct {

	// The number you assign as the name for your merchant-defined data or secure field. Valid values are data1 to data4 and sensitive1 to sensitive4
	//
	// For example, to set the name for merchant-defined data 2 field, you would reference merchantDefinedInformation[x].name as data2
	// Valid values:
	// - data1
	// - data2
	// - data3
	// - data4
	// - sensitive1
	// - sensitive2
	// - sensitive3
	// - sensitive4
	//
	Name string `json:"name,omitempty"`

	// The value you assign for your merchant-defined data field.
	//
	// **Warning** Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields. Personally identifying information includes, but is not
	// limited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV,
	// CVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension.
	//
	// Max Length: 100
	Value string `json:"value,omitempty"`
}

// Validate validates this post customer params body merchant defined information items0
func (o *PostCustomerParamsBodyMerchantDefinedInformationItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyMerchantDefinedInformationItems0) validateValue(formats strfmt.Registry) error {

	if swag.IsZero(o.Value) { // not required
		return nil
	}

	if err := validate.MaxLength("value", "body", string(o.Value), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyMerchantDefinedInformationItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyMerchantDefinedInformationItems0) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyMerchantDefinedInformationItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyMetadata post customer params body metadata
swagger:model PostCustomerParamsBodyMetadata
*/
type PostCustomerParamsBodyMetadata struct {

	// The creator of the Customer token.
	//
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this post customer params body metadata
func (o *PostCustomerParamsBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCustomerParamsBodyObjectInformation post customer params body object information
swagger:model PostCustomerParamsBodyObjectInformation
*/
type PostCustomerParamsBodyObjectInformation struct {

	// Comments that you can make about the customer.
	//
	// Max Length: 150
	Comment string `json:"comment,omitempty"`

	// Name or title of the customer.
	//
	// Max Length: 60
	Title string `json:"title,omitempty"`
}

// Validate validates this post customer params body object information
func (o *PostCustomerParamsBodyObjectInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComment(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCustomerParamsBodyObjectInformation) validateComment(formats strfmt.Registry) error {

	if swag.IsZero(o.Comment) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"objectInformation"+"."+"comment", "body", string(o.Comment), 150); err != nil {
		return err
	}

	return nil
}

func (o *PostCustomerParamsBodyObjectInformation) validateTitle(formats strfmt.Registry) error {

	if swag.IsZero(o.Title) { // not required
		return nil
	}

	if err := validate.MaxLength("postCustomerRequest"+"."+"objectInformation"+"."+"title", "body", string(o.Title), 60); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCustomerParamsBodyObjectInformation) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCustomerParamsBodyObjectInformation) UnmarshalBinary(b []byte) error {
	var res PostCustomerParamsBodyObjectInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
