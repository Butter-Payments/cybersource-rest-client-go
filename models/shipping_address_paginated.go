// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ShippingAddressPaginated A paginated container of Shipping Addresses.
//
//
// swagger:model ShippingAddressPaginated
type ShippingAddressPaginated struct {

	// embedded
	Embedded *ShippingAddressPaginatedEmbedded `json:"_embedded,omitempty"`

	// links
	Links *ShippingAddressPaginatedLinks `json:"_links,omitempty"`

	// The number of Shipping Addresses returned in the array.
	// Read Only: true
	Count int64 `json:"count,omitempty"`

	// The limit parameter supplied in the request.
	// Read Only: true
	Limit int64 `json:"limit,omitempty"`

	// The offset parameter supplied in the request.
	// Read Only: true
	Offset int64 `json:"offset,omitempty"`

	// The total number of Shipping Addresses associated with the Customer.
	// Read Only: true
	Total int64 `json:"total,omitempty"`
}

// Validate validates this shipping address paginated
func (m *ShippingAddressPaginated) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmbedded(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShippingAddressPaginated) validateEmbedded(formats strfmt.Registry) error {

	if swag.IsZero(m.Embedded) { // not required
		return nil
	}

	if m.Embedded != nil {
		if err := m.Embedded.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_embedded")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginated) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {
		if err := m.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginated) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginated) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginated
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbedded Shipping Address Resources.
//
//
// swagger:model ShippingAddressPaginatedEmbedded
type ShippingAddressPaginatedEmbedded struct {

	// shipping addresses
	// Read Only: true
	ShippingAddresses []*ShippingAddressPaginatedEmbeddedShippingAddressesItems0 `json:"shippingAddresses"`
}

// Validate validates this shipping address paginated embedded
func (m *ShippingAddressPaginatedEmbedded) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateShippingAddresses(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShippingAddressPaginatedEmbedded) validateShippingAddresses(formats strfmt.Registry) error {

	if swag.IsZero(m.ShippingAddresses) { // not required
		return nil
	}

	for i := 0; i < len(m.ShippingAddresses); i++ {
		if swag.IsZero(m.ShippingAddresses[i]) { // not required
			continue
		}

		if m.ShippingAddresses[i] != nil {
			if err := m.ShippingAddresses[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("_embedded" + "." + "shippingAddresses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbedded) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbedded) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbedded
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbeddedShippingAddressesItems0 shipping address paginated embedded shipping addresses items0
//
// swagger:model ShippingAddressPaginatedEmbeddedShippingAddressesItems0
type ShippingAddressPaginatedEmbeddedShippingAddressesItems0 struct {

	// links
	Links *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links `json:"_links,omitempty"`

	// The id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo `json:"shipTo,omitempty"`
}

// Validate validates this shipping address paginated embedded shipping addresses items0
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.Links) { // not required
		return nil
	}

	if m.Links != nil {
		if err := m.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.MinLength("id", "body", string(m.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("id", "body", string(m.ID), 32); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) validateShipTo(formats strfmt.Registry) error {

	if swag.IsZero(m.ShipTo) { // not required
		return nil
	}

	if m.ShipTo != nil {
		if err := m.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbeddedShippingAddressesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links shipping address paginated embedded shipping addresses items0 links
//
// swagger:model ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links
type ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links struct {

	// customer
	Customer *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer `json:"customer,omitempty"`

	// self
	Self *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf `json:"self,omitempty"`
}

// Validate validates this shipping address paginated embedded shipping addresses items0 links
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(m.Customer) { // not required
		return nil
	}

	if m.Customer != nil {
		if err := m.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if m.Self != nil {
		if err := m.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbeddedShippingAddressesItems0Links
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer shipping address paginated embedded shipping addresses items0 links customer
//
// swagger:model ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer
type ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer struct {

	// Link to the Customer
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated embedded shipping addresses items0 links customer
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf shipping address paginated embedded shipping addresses items0 links self
//
// swagger:model ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf
type ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated embedded shipping addresses items0 links self
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbeddedShippingAddressesItems0LinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata shipping address paginated embedded shipping addresses items0 metadata
//
// swagger:model ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata
type ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata struct {

	// The creator of the Shipping Address token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this shipping address paginated embedded shipping addresses items0 metadata
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbeddedShippingAddressesItems0Metadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo shipping address paginated embedded shipping addresses items0 ship to
//
// swagger:model ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo
type ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this shipping address paginated embedded shipping addresses items0 ship to
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(m.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"address1", "body", string(m.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(m.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"address2", "body", string(m.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(m.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"administrativeArea", "body", string(m.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(m.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"company", "body", string(m.Company), 60); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"country", "body", string(m.Country), 2); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(m.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"email", "body", string(m.Email), 320); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"firstName", "body", string(m.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(m.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"lastName", "body", string(m.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(m.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"locality", "body", string(m.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(m.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"phoneNumber", "body", string(m.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(m.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("shipTo"+"."+"postalCode", "body", string(m.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedEmbeddedShippingAddressesItems0ShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedLinks shipping address paginated links
//
// swagger:model ShippingAddressPaginatedLinks
type ShippingAddressPaginatedLinks struct {

	// first
	First *ShippingAddressPaginatedLinksFirst `json:"first,omitempty"`

	// last
	Last *ShippingAddressPaginatedLinksLast `json:"last,omitempty"`

	// next
	Next *ShippingAddressPaginatedLinksNext `json:"next,omitempty"`

	// prev
	Prev *ShippingAddressPaginatedLinksPrev `json:"prev,omitempty"`

	// self
	Self *ShippingAddressPaginatedLinksSelf `json:"self,omitempty"`
}

// Validate validates this shipping address paginated links
func (m *ShippingAddressPaginatedLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLast(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrev(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShippingAddressPaginatedLinks) validateFirst(formats strfmt.Registry) error {

	if swag.IsZero(m.First) { // not required
		return nil
	}

	if m.First != nil {
		if err := m.First.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "first")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedLinks) validateLast(formats strfmt.Registry) error {

	if swag.IsZero(m.Last) { // not required
		return nil
	}

	if m.Last != nil {
		if err := m.Last.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "last")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedLinks) validateNext(formats strfmt.Registry) error {

	if swag.IsZero(m.Next) { // not required
		return nil
	}

	if m.Next != nil {
		if err := m.Next.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "next")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedLinks) validatePrev(formats strfmt.Registry) error {

	if swag.IsZero(m.Prev) { // not required
		return nil
	}

	if m.Prev != nil {
		if err := m.Prev.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "prev")
			}
			return err
		}
	}

	return nil
}

func (m *ShippingAddressPaginatedLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if m.Self != nil {
		if err := m.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinks) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinks) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedLinksFirst shipping address paginated links first
//
// swagger:model ShippingAddressPaginatedLinksFirst
type ShippingAddressPaginatedLinksFirst struct {

	// Link to the first page.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated links first
func (m *ShippingAddressPaginatedLinksFirst) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksFirst) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksFirst) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedLinksFirst
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedLinksLast shipping address paginated links last
//
// swagger:model ShippingAddressPaginatedLinksLast
type ShippingAddressPaginatedLinksLast struct {

	// Link to the last page.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated links last
func (m *ShippingAddressPaginatedLinksLast) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksLast) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksLast) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedLinksLast
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedLinksNext shipping address paginated links next
//
// swagger:model ShippingAddressPaginatedLinksNext
type ShippingAddressPaginatedLinksNext struct {

	// Link to the next page.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated links next
func (m *ShippingAddressPaginatedLinksNext) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksNext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksNext) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedLinksNext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedLinksPrev shipping address paginated links prev
//
// swagger:model ShippingAddressPaginatedLinksPrev
type ShippingAddressPaginatedLinksPrev struct {

	// Link to the previous page.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated links prev
func (m *ShippingAddressPaginatedLinksPrev) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksPrev) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksPrev) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedLinksPrev
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShippingAddressPaginatedLinksSelf shipping address paginated links self
//
// swagger:model ShippingAddressPaginatedLinksSelf
type ShippingAddressPaginatedLinksSelf struct {

	// Link to the current page.
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this shipping address paginated links self
func (m *ShippingAddressPaginatedLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksSelf) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShippingAddressPaginatedLinksSelf) UnmarshalBinary(b []byte) error {
	var res ShippingAddressPaginatedLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
