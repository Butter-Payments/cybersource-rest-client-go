// Code generated by go-swagger; DO NOT EDIT.

package customer_payment_instrument

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteCustomerPaymentInstrumentReader is a Reader for the DeleteCustomerPaymentInstrument structure.
type DeleteCustomerPaymentInstrumentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCustomerPaymentInstrumentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCustomerPaymentInstrumentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCustomerPaymentInstrumentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCustomerPaymentInstrumentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCustomerPaymentInstrumentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewDeleteCustomerPaymentInstrumentFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCustomerPaymentInstrumentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCustomerPaymentInstrumentNoContent creates a DeleteCustomerPaymentInstrumentNoContent with default headers values
func NewDeleteCustomerPaymentInstrumentNoContent() *DeleteCustomerPaymentInstrumentNoContent {
	return &DeleteCustomerPaymentInstrumentNoContent{}
}

/*DeleteCustomerPaymentInstrumentNoContent handles this case with default header values.

The server fulfilled the request but does not need to return a body
*/
type DeleteCustomerPaymentInstrumentNoContent struct {
	/*A globally unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string
}

func (o *DeleteCustomerPaymentInstrumentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /tms/v2/customers/{customerTokenId}/payment-instruments/{paymentInstrumentTokenId}][%d] deleteCustomerPaymentInstrumentNoContent ", 204)
}

func (o *DeleteCustomerPaymentInstrumentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	return nil
}

// NewDeleteCustomerPaymentInstrumentBadRequest creates a DeleteCustomerPaymentInstrumentBadRequest with default headers values
func NewDeleteCustomerPaymentInstrumentBadRequest() *DeleteCustomerPaymentInstrumentBadRequest {
	return &DeleteCustomerPaymentInstrumentBadRequest{}
}

/*DeleteCustomerPaymentInstrumentBadRequest handles this case with default header values.

Bad Request: e.g. A required header value could be missing.
*/
type DeleteCustomerPaymentInstrumentBadRequest struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *DeleteCustomerPaymentInstrumentBadRequestBody
}

func (o *DeleteCustomerPaymentInstrumentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /tms/v2/customers/{customerTokenId}/payment-instruments/{paymentInstrumentTokenId}][%d] deleteCustomerPaymentInstrumentBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteCustomerPaymentInstrumentBadRequest) GetPayload() *DeleteCustomerPaymentInstrumentBadRequestBody {
	return o.Payload
}

func (o *DeleteCustomerPaymentInstrumentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(DeleteCustomerPaymentInstrumentBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerPaymentInstrumentForbidden creates a DeleteCustomerPaymentInstrumentForbidden with default headers values
func NewDeleteCustomerPaymentInstrumentForbidden() *DeleteCustomerPaymentInstrumentForbidden {
	return &DeleteCustomerPaymentInstrumentForbidden{}
}

/*DeleteCustomerPaymentInstrumentForbidden handles this case with default header values.

403ForbiddenResponse: e.g. The profile might not have permission to perform the operation.
*/
type DeleteCustomerPaymentInstrumentForbidden struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *DeleteCustomerPaymentInstrumentForbiddenBody
}

func (o *DeleteCustomerPaymentInstrumentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /tms/v2/customers/{customerTokenId}/payment-instruments/{paymentInstrumentTokenId}][%d] deleteCustomerPaymentInstrumentForbidden  %+v", 403, o.Payload)
}

func (o *DeleteCustomerPaymentInstrumentForbidden) GetPayload() *DeleteCustomerPaymentInstrumentForbiddenBody {
	return o.Payload
}

func (o *DeleteCustomerPaymentInstrumentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(DeleteCustomerPaymentInstrumentForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerPaymentInstrumentNotFound creates a DeleteCustomerPaymentInstrumentNotFound with default headers values
func NewDeleteCustomerPaymentInstrumentNotFound() *DeleteCustomerPaymentInstrumentNotFound {
	return &DeleteCustomerPaymentInstrumentNotFound{}
}

/*DeleteCustomerPaymentInstrumentNotFound handles this case with default header values.

Token Not Found. The `tokenid` may not exist or was entered incorrectly.
*/
type DeleteCustomerPaymentInstrumentNotFound struct {
	/*A globally unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *DeleteCustomerPaymentInstrumentNotFoundBody
}

func (o *DeleteCustomerPaymentInstrumentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /tms/v2/customers/{customerTokenId}/payment-instruments/{paymentInstrumentTokenId}][%d] deleteCustomerPaymentInstrumentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCustomerPaymentInstrumentNotFound) GetPayload() *DeleteCustomerPaymentInstrumentNotFoundBody {
	return o.Payload
}

func (o *DeleteCustomerPaymentInstrumentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(DeleteCustomerPaymentInstrumentNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerPaymentInstrumentFailedDependency creates a DeleteCustomerPaymentInstrumentFailedDependency with default headers values
func NewDeleteCustomerPaymentInstrumentFailedDependency() *DeleteCustomerPaymentInstrumentFailedDependency {
	return &DeleteCustomerPaymentInstrumentFailedDependency{}
}

/*DeleteCustomerPaymentInstrumentFailedDependency handles this case with default header values.

Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.
*/
type DeleteCustomerPaymentInstrumentFailedDependency struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *DeleteCustomerPaymentInstrumentFailedDependencyBody
}

func (o *DeleteCustomerPaymentInstrumentFailedDependency) Error() string {
	return fmt.Sprintf("[DELETE /tms/v2/customers/{customerTokenId}/payment-instruments/{paymentInstrumentTokenId}][%d] deleteCustomerPaymentInstrumentFailedDependency  %+v", 424, o.Payload)
}

func (o *DeleteCustomerPaymentInstrumentFailedDependency) GetPayload() *DeleteCustomerPaymentInstrumentFailedDependencyBody {
	return o.Payload
}

func (o *DeleteCustomerPaymentInstrumentFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(DeleteCustomerPaymentInstrumentFailedDependencyBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomerPaymentInstrumentInternalServerError creates a DeleteCustomerPaymentInstrumentInternalServerError with default headers values
func NewDeleteCustomerPaymentInstrumentInternalServerError() *DeleteCustomerPaymentInstrumentInternalServerError {
	return &DeleteCustomerPaymentInstrumentInternalServerError{}
}

/*DeleteCustomerPaymentInstrumentInternalServerError handles this case with default header values.

Unexpected error.
*/
type DeleteCustomerPaymentInstrumentInternalServerError struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *DeleteCustomerPaymentInstrumentInternalServerErrorBody
}

func (o *DeleteCustomerPaymentInstrumentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /tms/v2/customers/{customerTokenId}/payment-instruments/{paymentInstrumentTokenId}][%d] deleteCustomerPaymentInstrumentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteCustomerPaymentInstrumentInternalServerError) GetPayload() *DeleteCustomerPaymentInstrumentInternalServerErrorBody {
	return o.Payload
}

func (o *DeleteCustomerPaymentInstrumentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(DeleteCustomerPaymentInstrumentInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteCustomerPaymentInstrumentBadRequestBody delete customer payment instrument bad request body
swagger:model DeleteCustomerPaymentInstrumentBadRequestBody
*/
type DeleteCustomerPaymentInstrumentBadRequestBody struct {

	// errors
	// Read Only: true
	Errors []*DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0 `json:"errors"`
}

// Validate validates this delete customer payment instrument bad request body
func (o *DeleteCustomerPaymentInstrumentBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentBadRequestBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deleteCustomerPaymentInstrumentBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0 delete customer payment instrument bad request body errors items0
swagger:model DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0
*/
type DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this delete customer payment instrument bad request body errors items0
func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0 delete customer payment instrument bad request body errors items0 details items0
swagger:model DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0
*/
type DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this delete customer payment instrument bad request body errors items0 details items0
func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentBadRequestBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentFailedDependencyBody delete customer payment instrument failed dependency body
swagger:model DeleteCustomerPaymentInstrumentFailedDependencyBody
*/
type DeleteCustomerPaymentInstrumentFailedDependencyBody struct {

	// errors
	// Read Only: true
	Errors []*DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0 `json:"errors"`
}

// Validate validates this delete customer payment instrument failed dependency body
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentFailedDependencyBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deleteCustomerPaymentInstrumentFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBody) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentFailedDependencyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0 delete customer payment instrument failed dependency body errors items0
swagger:model DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0
*/
type DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this delete customer payment instrument failed dependency body errors items0
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0 delete customer payment instrument failed dependency body errors items0 details items0
swagger:model DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0
*/
type DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this delete customer payment instrument failed dependency body errors items0 details items0
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentFailedDependencyBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentForbiddenBody delete customer payment instrument forbidden body
swagger:model DeleteCustomerPaymentInstrumentForbiddenBody
*/
type DeleteCustomerPaymentInstrumentForbiddenBody struct {

	// errors
	// Read Only: true
	Errors []*DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0 `json:"errors"`
}

// Validate validates this delete customer payment instrument forbidden body
func (o *DeleteCustomerPaymentInstrumentForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentForbiddenBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deleteCustomerPaymentInstrumentForbidden" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0 delete customer payment instrument forbidden body errors items0
swagger:model DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0
*/
type DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this delete customer payment instrument forbidden body errors items0
func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0 delete customer payment instrument forbidden body errors items0 details items0
swagger:model DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0
*/
type DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this delete customer payment instrument forbidden body errors items0 details items0
func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentForbiddenBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentInternalServerErrorBody delete customer payment instrument internal server error body
swagger:model DeleteCustomerPaymentInstrumentInternalServerErrorBody
*/
type DeleteCustomerPaymentInstrumentInternalServerErrorBody struct {

	// errors
	// Read Only: true
	Errors []*DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0 `json:"errors"`
}

// Validate validates this delete customer payment instrument internal server error body
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deleteCustomerPaymentInstrumentInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0 delete customer payment instrument internal server error body errors items0
swagger:model DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0
*/
type DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this delete customer payment instrument internal server error body errors items0
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0 delete customer payment instrument internal server error body errors items0 details items0
swagger:model DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0
*/
type DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this delete customer payment instrument internal server error body errors items0 details items0
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentInternalServerErrorBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentNotFoundBody delete customer payment instrument not found body
swagger:model DeleteCustomerPaymentInstrumentNotFoundBody
*/
type DeleteCustomerPaymentInstrumentNotFoundBody struct {

	// errors
	// Read Only: true
	Errors []*DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0 `json:"errors"`
}

// Validate validates this delete customer payment instrument not found body
func (o *DeleteCustomerPaymentInstrumentNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentNotFoundBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deleteCustomerPaymentInstrumentNotFound" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0 delete customer payment instrument not found body errors items0
swagger:model DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0
*/
type DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this delete customer payment instrument not found body errors items0
func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0 delete customer payment instrument not found body errors items0 details items0
swagger:model DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0
*/
type DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this delete customer payment instrument not found body errors items0 details items0
func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DeleteCustomerPaymentInstrumentNotFoundBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
