// Code generated by go-swagger; DO NOT EDIT.

package customer_shipping_address

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PatchCustomersShippingAddressReader is a Reader for the PatchCustomersShippingAddress structure.
type PatchCustomersShippingAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCustomersShippingAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchCustomersShippingAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchCustomersShippingAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchCustomersShippingAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPatchCustomersShippingAddressGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 424:
		result := NewPatchCustomersShippingAddressFailedDependency()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchCustomersShippingAddressInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchCustomersShippingAddressOK creates a PatchCustomersShippingAddressOK with default headers values
func NewPatchCustomersShippingAddressOK() *PatchCustomersShippingAddressOK {
	return &PatchCustomersShippingAddressOK{}
}

/*PatchCustomersShippingAddressOK handles this case with default header values.

Returns an existing Shipping Address associated with the supplied token id.
*/
type PatchCustomersShippingAddressOK struct {
	/*An ETag is an identifier assigned to a specific version of a resource.
	 */
	ETag string
	/*A globally-unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PatchCustomersShippingAddressOKBody
}

func (o *PatchCustomersShippingAddressOK) Error() string {
	return fmt.Sprintf("[PATCH /tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}][%d] patchCustomersShippingAddressOK  %+v", 200, o.Payload)
}

func (o *PatchCustomersShippingAddressOK) GetPayload() *PatchCustomersShippingAddressOKBody {
	return o.Payload
}

func (o *PatchCustomersShippingAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header ETag
	o.ETag = response.GetHeader("ETag")

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PatchCustomersShippingAddressOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCustomersShippingAddressBadRequest creates a PatchCustomersShippingAddressBadRequest with default headers values
func NewPatchCustomersShippingAddressBadRequest() *PatchCustomersShippingAddressBadRequest {
	return &PatchCustomersShippingAddressBadRequest{}
}

/*PatchCustomersShippingAddressBadRequest handles this case with default header values.

Bad Request: e.g. A required header value could be missing.
*/
type PatchCustomersShippingAddressBadRequest struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PatchCustomersShippingAddressBadRequestBody
}

func (o *PatchCustomersShippingAddressBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}][%d] patchCustomersShippingAddressBadRequest  %+v", 400, o.Payload)
}

func (o *PatchCustomersShippingAddressBadRequest) GetPayload() *PatchCustomersShippingAddressBadRequestBody {
	return o.Payload
}

func (o *PatchCustomersShippingAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PatchCustomersShippingAddressBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCustomersShippingAddressNotFound creates a PatchCustomersShippingAddressNotFound with default headers values
func NewPatchCustomersShippingAddressNotFound() *PatchCustomersShippingAddressNotFound {
	return &PatchCustomersShippingAddressNotFound{}
}

/*PatchCustomersShippingAddressNotFound handles this case with default header values.

Token Not Found. The `tokenid` may not exist or was entered incorrectly.
*/
type PatchCustomersShippingAddressNotFound struct {
	/*A globally unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PatchCustomersShippingAddressNotFoundBody
}

func (o *PatchCustomersShippingAddressNotFound) Error() string {
	return fmt.Sprintf("[PATCH /tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}][%d] patchCustomersShippingAddressNotFound  %+v", 404, o.Payload)
}

func (o *PatchCustomersShippingAddressNotFound) GetPayload() *PatchCustomersShippingAddressNotFoundBody {
	return o.Payload
}

func (o *PatchCustomersShippingAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PatchCustomersShippingAddressNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCustomersShippingAddressGone creates a PatchCustomersShippingAddressGone with default headers values
func NewPatchCustomersShippingAddressGone() *PatchCustomersShippingAddressGone {
	return &PatchCustomersShippingAddressGone{}
}

/*PatchCustomersShippingAddressGone handles this case with default header values.

Token Not Available. The token has been deleted.
*/
type PatchCustomersShippingAddressGone struct {
	/*A globally unique ID associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PatchCustomersShippingAddressGoneBody
}

func (o *PatchCustomersShippingAddressGone) Error() string {
	return fmt.Sprintf("[PATCH /tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}][%d] patchCustomersShippingAddressGone  %+v", 410, o.Payload)
}

func (o *PatchCustomersShippingAddressGone) GetPayload() *PatchCustomersShippingAddressGoneBody {
	return o.Payload
}

func (o *PatchCustomersShippingAddressGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PatchCustomersShippingAddressGoneBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCustomersShippingAddressFailedDependency creates a PatchCustomersShippingAddressFailedDependency with default headers values
func NewPatchCustomersShippingAddressFailedDependency() *PatchCustomersShippingAddressFailedDependency {
	return &PatchCustomersShippingAddressFailedDependency{}
}

/*PatchCustomersShippingAddressFailedDependency handles this case with default header values.

Failed Dependency: e.g. The profile represented by the profile-id may not exist or the profile-id was entered incorrectly.
*/
type PatchCustomersShippingAddressFailedDependency struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PatchCustomersShippingAddressFailedDependencyBody
}

func (o *PatchCustomersShippingAddressFailedDependency) Error() string {
	return fmt.Sprintf("[PATCH /tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}][%d] patchCustomersShippingAddressFailedDependency  %+v", 424, o.Payload)
}

func (o *PatchCustomersShippingAddressFailedDependency) GetPayload() *PatchCustomersShippingAddressFailedDependencyBody {
	return o.Payload
}

func (o *PatchCustomersShippingAddressFailedDependency) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PatchCustomersShippingAddressFailedDependencyBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchCustomersShippingAddressInternalServerError creates a PatchCustomersShippingAddressInternalServerError with default headers values
func NewPatchCustomersShippingAddressInternalServerError() *PatchCustomersShippingAddressInternalServerError {
	return &PatchCustomersShippingAddressInternalServerError{}
}

/*PatchCustomersShippingAddressInternalServerError handles this case with default header values.

Unexpected error.
*/
type PatchCustomersShippingAddressInternalServerError struct {
	/*A globally unique id associated with your request.
	 */
	UniqueTransactionID string
	/*The mandatory correlation id passed by upstream (calling) system.
	 */
	VcCorrelationID string

	Payload *PatchCustomersShippingAddressInternalServerErrorBody
}

func (o *PatchCustomersShippingAddressInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /tms/v2/customers/{customerTokenId}/shipping-addresses/{shippingAddressTokenId}][%d] patchCustomersShippingAddressInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchCustomersShippingAddressInternalServerError) GetPayload() *PatchCustomersShippingAddressInternalServerErrorBody {
	return o.Payload
}

func (o *PatchCustomersShippingAddressInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header uniqueTransactionID
	o.UniqueTransactionID = response.GetHeader("uniqueTransactionID")

	// response header v-c-correlation-id
	o.VcCorrelationID = response.GetHeader("v-c-correlation-id")

	o.Payload = new(PatchCustomersShippingAddressInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchCustomersShippingAddressBadRequestBody patch customers shipping address bad request body
swagger:model PatchCustomersShippingAddressBadRequestBody
*/
type PatchCustomersShippingAddressBadRequestBody struct {

	// errors
	// Read Only: true
	Errors []*PatchCustomersShippingAddressBadRequestBodyErrorsItems0 `json:"errors"`
}

// Validate validates this patch customers shipping address bad request body
func (o *PatchCustomersShippingAddressBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressBadRequestBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("patchCustomersShippingAddressBadRequest" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressBadRequestBodyErrorsItems0 patch customers shipping address bad request body errors items0
swagger:model PatchCustomersShippingAddressBadRequestBodyErrorsItems0
*/
type PatchCustomersShippingAddressBadRequestBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this patch customers shipping address bad request body errors items0
func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressBadRequestBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0 patch customers shipping address bad request body errors items0 details items0
swagger:model PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0
*/
type PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this patch customers shipping address bad request body errors items0 details items0
func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressBadRequestBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressBody patch customers shipping address body
swagger:model PatchCustomersShippingAddressBody
*/
type PatchCustomersShippingAddressBody struct {

	// links
	Links *PatchCustomersShippingAddressParamsBodyLinks `json:"_links,omitempty"`

	// The id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *PatchCustomersShippingAddressParamsBodyMetadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *PatchCustomersShippingAddressParamsBodyShipTo `json:"shipTo,omitempty"`
}

// Validate validates this patch customers shipping address body
func (o *PatchCustomersShippingAddressBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomerShippingAddressRequest" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PatchCustomersShippingAddressBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("patchCustomerShippingAddressRequest"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomerShippingAddressRequest" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PatchCustomersShippingAddressBody) validateShipTo(formats strfmt.Registry) error {

	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomerShippingAddressRequest" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressFailedDependencyBody patch customers shipping address failed dependency body
swagger:model PatchCustomersShippingAddressFailedDependencyBody
*/
type PatchCustomersShippingAddressFailedDependencyBody struct {

	// errors
	// Read Only: true
	Errors []*PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0 `json:"errors"`
}

// Validate validates this patch customers shipping address failed dependency body
func (o *PatchCustomersShippingAddressFailedDependencyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressFailedDependencyBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("patchCustomersShippingAddressFailedDependency" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressFailedDependencyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressFailedDependencyBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressFailedDependencyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0 patch customers shipping address failed dependency body errors items0
swagger:model PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0
*/
type PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this patch customers shipping address failed dependency body errors items0
func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0 patch customers shipping address failed dependency body errors items0 details items0
swagger:model PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0
*/
type PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this patch customers shipping address failed dependency body errors items0 details items0
func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressFailedDependencyBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressGoneBody patch customers shipping address gone body
swagger:model PatchCustomersShippingAddressGoneBody
*/
type PatchCustomersShippingAddressGoneBody struct {

	// errors
	// Read Only: true
	Errors []*PatchCustomersShippingAddressGoneBodyErrorsItems0 `json:"errors"`
}

// Validate validates this patch customers shipping address gone body
func (o *PatchCustomersShippingAddressGoneBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressGoneBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("patchCustomersShippingAddressGone" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressGoneBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressGoneBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressGoneBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressGoneBodyErrorsItems0 patch customers shipping address gone body errors items0
swagger:model PatchCustomersShippingAddressGoneBodyErrorsItems0
*/
type PatchCustomersShippingAddressGoneBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this patch customers shipping address gone body errors items0
func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressGoneBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0 patch customers shipping address gone body errors items0 details items0
swagger:model PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0
*/
type PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this patch customers shipping address gone body errors items0 details items0
func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressGoneBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressInternalServerErrorBody patch customers shipping address internal server error body
swagger:model PatchCustomersShippingAddressInternalServerErrorBody
*/
type PatchCustomersShippingAddressInternalServerErrorBody struct {

	// errors
	// Read Only: true
	Errors []*PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0 `json:"errors"`
}

// Validate validates this patch customers shipping address internal server error body
func (o *PatchCustomersShippingAddressInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressInternalServerErrorBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("patchCustomersShippingAddressInternalServerError" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0 patch customers shipping address internal server error body errors items0
swagger:model PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0
*/
type PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this patch customers shipping address internal server error body errors items0
func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0 patch customers shipping address internal server error body errors items0 details items0
swagger:model PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0
*/
type PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this patch customers shipping address internal server error body errors items0 details items0
func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressInternalServerErrorBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressNotFoundBody patch customers shipping address not found body
swagger:model PatchCustomersShippingAddressNotFoundBody
*/
type PatchCustomersShippingAddressNotFoundBody struct {

	// errors
	// Read Only: true
	Errors []*PatchCustomersShippingAddressNotFoundBodyErrorsItems0 `json:"errors"`
}

// Validate validates this patch customers shipping address not found body
func (o *PatchCustomersShippingAddressNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressNotFoundBody) validateErrors(formats strfmt.Registry) error {

	if swag.IsZero(o.Errors) { // not required
		return nil
	}

	for i := 0; i < len(o.Errors); i++ {
		if swag.IsZero(o.Errors[i]) { // not required
			continue
		}

		if o.Errors[i] != nil {
			if err := o.Errors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("patchCustomersShippingAddressNotFound" + "." + "errors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressNotFoundBodyErrorsItems0 patch customers shipping address not found body errors items0
swagger:model PatchCustomersShippingAddressNotFoundBodyErrorsItems0
*/
type PatchCustomersShippingAddressNotFoundBodyErrorsItems0 struct {

	// details
	// Read Only: true
	Details []*PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0 `json:"details"`

	// The detailed message related to the type stated above.
	// Read Only: true
	Message string `json:"message,omitempty"`

	// The type of error.
	// Read Only: true
	Type string `json:"type,omitempty"`
}

// Validate validates this patch customers shipping address not found body errors items0
func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressNotFoundBodyErrorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0 patch customers shipping address not found body errors items0 details items0
swagger:model PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0
*/
type PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0 struct {

	// The location of the field that caused the error.
	// Read Only: true
	Location string `json:"location,omitempty"`

	// The name of the field that caused the error.
	// Read Only: true
	Name string `json:"name,omitempty"`
}

// Validate validates this patch customers shipping address not found body errors items0 details items0
func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressNotFoundBodyErrorsItems0DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressOKBody patch customers shipping address o k body
swagger:model PatchCustomersShippingAddressOKBody
*/
type PatchCustomersShippingAddressOKBody struct {

	// links
	Links *PatchCustomersShippingAddressOKBodyLinks `json:"_links,omitempty"`

	// The id of the Shipping Address Token.
	// Max Length: 32
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// metadata
	Metadata *PatchCustomersShippingAddressOKBodyMetadata `json:"metadata,omitempty"`

	// ship to
	ShipTo *PatchCustomersShippingAddressOKBodyShipTo `json:"shipTo,omitempty"`
}

// Validate validates this patch customers shipping address o k body
func (o *PatchCustomersShippingAddressOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateShipTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressOKBody) validateLinks(formats strfmt.Registry) error {

	if swag.IsZero(o.Links) { // not required
		return nil
	}

	if o.Links != nil {
		if err := o.Links.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomersShippingAddressOK" + "." + "_links")
			}
			return err
		}
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.MinLength("patchCustomersShippingAddressOK"+"."+"id", "body", string(o.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"id", "body", string(o.ID), 32); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(o.Metadata) { // not required
		return nil
	}

	if o.Metadata != nil {
		if err := o.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomersShippingAddressOK" + "." + "metadata")
			}
			return err
		}
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBody) validateShipTo(formats strfmt.Registry) error {

	if swag.IsZero(o.ShipTo) { // not required
		return nil
	}

	if o.ShipTo != nil {
		if err := o.ShipTo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomersShippingAddressOK" + "." + "shipTo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBody) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressOKBodyLinks patch customers shipping address o k body links
swagger:model PatchCustomersShippingAddressOKBodyLinks
*/
type PatchCustomersShippingAddressOKBodyLinks struct {

	// customer
	Customer *PatchCustomersShippingAddressOKBodyLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PatchCustomersShippingAddressOKBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this patch customers shipping address o k body links
func (o *PatchCustomersShippingAddressOKBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressOKBodyLinks) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomersShippingAddressOK" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomersShippingAddressOK" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyLinks) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressOKBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressOKBodyLinksCustomer patch customers shipping address o k body links customer
swagger:model PatchCustomersShippingAddressOKBodyLinksCustomer
*/
type PatchCustomersShippingAddressOKBodyLinksCustomer struct {

	// Link to the Customer
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this patch customers shipping address o k body links customer
func (o *PatchCustomersShippingAddressOKBodyLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressOKBodyLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressOKBodyLinksSelf patch customers shipping address o k body links self
swagger:model PatchCustomersShippingAddressOKBodyLinksSelf
*/
type PatchCustomersShippingAddressOKBodyLinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this patch customers shipping address o k body links self
func (o *PatchCustomersShippingAddressOKBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressOKBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressOKBodyMetadata patch customers shipping address o k body metadata
swagger:model PatchCustomersShippingAddressOKBodyMetadata
*/
type PatchCustomersShippingAddressOKBodyMetadata struct {

	// The creator of the Shipping Address token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this patch customers shipping address o k body metadata
func (o *PatchCustomersShippingAddressOKBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressOKBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressOKBodyShipTo patch customers shipping address o k body ship to
swagger:model PatchCustomersShippingAddressOKBodyShipTo
*/
type PatchCustomersShippingAddressOKBodyShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this patch customers shipping address o k body ship to
func (o *PatchCustomersShippingAddressOKBodyShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"company", "body", string(o.Company), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"email", "body", string(o.Email), 320); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressOKBodyShipTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomersShippingAddressOK"+"."+"shipTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressOKBodyShipTo) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressOKBodyShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressParamsBodyLinks patch customers shipping address params body links
swagger:model PatchCustomersShippingAddressParamsBodyLinks
*/
type PatchCustomersShippingAddressParamsBodyLinks struct {

	// customer
	Customer *PatchCustomersShippingAddressParamsBodyLinksCustomer `json:"customer,omitempty"`

	// self
	Self *PatchCustomersShippingAddressParamsBodyLinksSelf `json:"self,omitempty"`
}

// Validate validates this patch customers shipping address params body links
func (o *PatchCustomersShippingAddressParamsBodyLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyLinks) validateCustomer(formats strfmt.Registry) error {

	if swag.IsZero(o.Customer) { // not required
		return nil
	}

	if o.Customer != nil {
		if err := o.Customer.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomerShippingAddressRequest" + "." + "_links" + "." + "customer")
			}
			return err
		}
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyLinks) validateSelf(formats strfmt.Registry) error {

	if swag.IsZero(o.Self) { // not required
		return nil
	}

	if o.Self != nil {
		if err := o.Self.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchCustomerShippingAddressRequest" + "." + "_links" + "." + "self")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyLinks) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyLinks) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressParamsBodyLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressParamsBodyLinksCustomer patch customers shipping address params body links customer
swagger:model PatchCustomersShippingAddressParamsBodyLinksCustomer
*/
type PatchCustomersShippingAddressParamsBodyLinksCustomer struct {

	// Link to the Customer
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this patch customers shipping address params body links customer
func (o *PatchCustomersShippingAddressParamsBodyLinksCustomer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyLinksCustomer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyLinksCustomer) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressParamsBodyLinksCustomer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressParamsBodyLinksSelf patch customers shipping address params body links self
swagger:model PatchCustomersShippingAddressParamsBodyLinksSelf
*/
type PatchCustomersShippingAddressParamsBodyLinksSelf struct {

	// Link to the Customers Shipping Address
	//
	// Read Only: true
	Href string `json:"href,omitempty"`
}

// Validate validates this patch customers shipping address params body links self
func (o *PatchCustomersShippingAddressParamsBodyLinksSelf) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyLinksSelf) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyLinksSelf) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressParamsBodyLinksSelf
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressParamsBodyMetadata patch customers shipping address params body metadata
swagger:model PatchCustomersShippingAddressParamsBodyMetadata
*/
type PatchCustomersShippingAddressParamsBodyMetadata struct {

	// The creator of the Shipping Address token.
	// Read Only: true
	Creator string `json:"creator,omitempty"`
}

// Validate validates this patch customers shipping address params body metadata
func (o *PatchCustomersShippingAddressParamsBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyMetadata) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyMetadata) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressParamsBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchCustomersShippingAddressParamsBodyShipTo patch customers shipping address params body ship to
swagger:model PatchCustomersShippingAddressParamsBodyShipTo
*/
type PatchCustomersShippingAddressParamsBodyShipTo struct {

	// First line of the shipping address.
	//
	// Max Length: 60
	Address1 string `json:"address1,omitempty"`

	// Second line of the shipping address.
	//
	// Max Length: 60
	Address2 string `json:"address2,omitempty"`

	// State or province of the shipping address. Use 2 character the State,
	// Province, and Territory Codes for the United States and Canada.
	//
	// Max Length: 20
	AdministrativeArea string `json:"administrativeArea,omitempty"`

	// Company associated with the shipping address.
	//
	// Max Length: 60
	Company string `json:"company,omitempty"`

	// Country of the shipping address. Use the two-character ISO Standard Country Codes.
	//
	// Max Length: 2
	Country string `json:"country,omitempty"`

	// Email associated with the shipping address.
	//
	// Max Length: 320
	Email string `json:"email,omitempty"`

	// First name of the recipient.
	//
	// Max Length: 60
	FirstName string `json:"firstName,omitempty"`

	// Last name of the recipient.
	//
	// Max Length: 60
	LastName string `json:"lastName,omitempty"`

	// City of the shipping address.
	//
	// Max Length: 50
	Locality string `json:"locality,omitempty"`

	// Phone number associated with the shipping address.
	//
	// Max Length: 15
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Postal code for the shipping address. The postal code must consist of 5 to 9 digits.
	//
	// When the billing country is the U.S., the 9-digit postal code must follow this format:
	// [5 digits][dash][4 digits]
	//
	// Example 12345-6789
	//
	// When the billing country is Canada, the 6-digit postal code must follow this format:
	// [alpha][numeric][alpha][space][numeric][alpha][numeric]
	//
	// Example A1B 2C3
	//
	// **American Express Direct**\
	// Before sending the postal code to the processor, CyberSource removes all nonalphanumeric characters and, if the
	// remaining value is longer than nine characters, truncates the value starting from the right side.
	//
	// Max Length: 10
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this patch customers shipping address params body ship to
func (o *PatchCustomersShippingAddressParamsBodyShipTo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress1(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAddress2(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAdministrativeArea(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCompany(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLocality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePhoneNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateAddress1(formats strfmt.Registry) error {

	if swag.IsZero(o.Address1) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"address1", "body", string(o.Address1), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateAddress2(formats strfmt.Registry) error {

	if swag.IsZero(o.Address2) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"address2", "body", string(o.Address2), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateAdministrativeArea(formats strfmt.Registry) error {

	if swag.IsZero(o.AdministrativeArea) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"administrativeArea", "body", string(o.AdministrativeArea), 20); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateCompany(formats strfmt.Registry) error {

	if swag.IsZero(o.Company) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"company", "body", string(o.Company), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(o.Country) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"country", "body", string(o.Country), 2); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(o.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"email", "body", string(o.Email), 320); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(o.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"firstName", "body", string(o.FirstName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(o.LastName) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"lastName", "body", string(o.LastName), 60); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validateLocality(formats strfmt.Registry) error {

	if swag.IsZero(o.Locality) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"locality", "body", string(o.Locality), 50); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validatePhoneNumber(formats strfmt.Registry) error {

	if swag.IsZero(o.PhoneNumber) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"phoneNumber", "body", string(o.PhoneNumber), 15); err != nil {
		return err
	}

	return nil
}

func (o *PatchCustomersShippingAddressParamsBodyShipTo) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(o.PostalCode) { // not required
		return nil
	}

	if err := validate.MaxLength("patchCustomerShippingAddressRequest"+"."+"shipTo"+"."+"postalCode", "body", string(o.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyShipTo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchCustomersShippingAddressParamsBodyShipTo) UnmarshalBinary(b []byte) error {
	var res PatchCustomersShippingAddressParamsBodyShipTo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
