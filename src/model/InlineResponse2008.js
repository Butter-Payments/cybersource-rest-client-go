/**
 * CyberSource Flex API
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse2006ReportPreferences'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InlineResponse2006ReportPreferences'));
  } else {
    // Browser globals (root is window)
    if (!root.CyberSource) {
      root.CyberSource = {};
    }
    root.CyberSource.InlineResponse2008 = factory(root.CyberSource.ApiClient, root.CyberSource.InlineResponse2006ReportPreferences);
  }
}(this, function(ApiClient, InlineResponse2006ReportPreferences) {
  'use strict';




  /**
   * The InlineResponse2008 model module.
   * @module model/InlineResponse2008
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>InlineResponse2008</code>.
   * Report Log
   * @alias module:model/InlineResponse2008
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>InlineResponse2008</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2008} obj Optional instance to populate.
   * @return {module:model/InlineResponse2008} The populated <code>InlineResponse2008</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('organizationId')) {
        obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
      }
      if (data.hasOwnProperty('reportId')) {
        obj['reportId'] = ApiClient.convertToType(data['reportId'], 'String');
      }
      if (data.hasOwnProperty('reportDefinitionId')) {
        obj['reportDefinitionId'] = ApiClient.convertToType(data['reportDefinitionId'], 'String');
      }
      if (data.hasOwnProperty('reportName')) {
        obj['reportName'] = ApiClient.convertToType(data['reportName'], 'String');
      }
      if (data.hasOwnProperty('reportMimeType')) {
        obj['reportMimeType'] = ApiClient.convertToType(data['reportMimeType'], 'String');
      }
      if (data.hasOwnProperty('reportFrequency')) {
        obj['reportFrequency'] = ApiClient.convertToType(data['reportFrequency'], 'String');
      }
      if (data.hasOwnProperty('reportFields')) {
        obj['reportFields'] = ApiClient.convertToType(data['reportFields'], ['String']);
      }
      if (data.hasOwnProperty('reportStatus')) {
        obj['reportStatus'] = ApiClient.convertToType(data['reportStatus'], 'String');
      }
      if (data.hasOwnProperty('reportStartTime')) {
        obj['reportStartTime'] = ApiClient.convertToType(data['reportStartTime'], 'Date');
      }
      if (data.hasOwnProperty('reportEndTime')) {
        obj['reportEndTime'] = ApiClient.convertToType(data['reportEndTime'], 'Date');
      }
      if (data.hasOwnProperty('timezone')) {
        obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
      }
      if (data.hasOwnProperty('reportFilters')) {
        obj['reportFilters'] = ApiClient.convertToType(data['reportFilters'], {'String': ['String']});
      }
      if (data.hasOwnProperty('reportPreferences')) {
        obj['reportPreferences'] = InlineResponse2006ReportPreferences.constructFromObject(data['reportPreferences']);
      }
      if (data.hasOwnProperty('selectedMerchantGroupName')) {
        obj['selectedMerchantGroupName'] = ApiClient.convertToType(data['selectedMerchantGroupName'], 'String');
      }
    }
    return obj;
  }

  /**
   * CyberSource merchant id
   * @member {String} organizationId
   */
  exports.prototype['organizationId'] = undefined;
  /**
   * Report ID Value
   * @member {String} reportId
   */
  exports.prototype['reportId'] = undefined;
  /**
   * Report definition Id
   * @member {String} reportDefinitionId
   */
  exports.prototype['reportDefinitionId'] = undefined;
  /**
   * Report Name
   * @member {String} reportName
   */
  exports.prototype['reportName'] = undefined;
  /**
   * Report Format
   * @member {module:model/InlineResponse2008.ReportMimeTypeEnum} reportMimeType
   */
  exports.prototype['reportMimeType'] = undefined;
  /**
   * Report Frequency Value
   * @member {module:model/InlineResponse2008.ReportFrequencyEnum} reportFrequency
   */
  exports.prototype['reportFrequency'] = undefined;
  /**
   * List of Integer Values
   * @member {Array.<String>} reportFields
   */
  exports.prototype['reportFields'] = undefined;
  /**
   * Report Status Value
   * @member {module:model/InlineResponse2008.ReportStatusEnum} reportStatus
   */
  exports.prototype['reportStatus'] = undefined;
  /**
   * Report Start Time Value
   * @member {Date} reportStartTime
   */
  exports.prototype['reportStartTime'] = undefined;
  /**
   * Report End Time Value
   * @member {Date} reportEndTime
   */
  exports.prototype['reportEndTime'] = undefined;
  /**
   * Time Zone Value
   * @member {String} timezone
   */
  exports.prototype['timezone'] = undefined;
  /**
   * Report Filters
   * @member {Object.<String, Array.<String>>} reportFilters
   */
  exports.prototype['reportFilters'] = undefined;
  /**
   * @member {module:model/InlineResponse2006ReportPreferences} reportPreferences
   */
  exports.prototype['reportPreferences'] = undefined;
  /**
   * Selected Merchant Group name
   * @member {String} selectedMerchantGroupName
   */
  exports.prototype['selectedMerchantGroupName'] = undefined;


  /**
   * Allowed values for the <code>reportMimeType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ReportMimeTypeEnum = {
    /**
     * value: "application/xml"
     * @const
     */
    "application/xml": "application/xml",
    /**
     * value: "text/csv"
     * @const
     */
    "text/csv": "text/csv"  };

  /**
   * Allowed values for the <code>reportFrequency</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ReportFrequencyEnum = {
    /**
     * value: "DAILY"
     * @const
     */
    "DAILY": "DAILY",
    /**
     * value: "WEEKLY"
     * @const
     */
    "WEEKLY": "WEEKLY",
    /**
     * value: "MONTHLY"
     * @const
     */
    "MONTHLY": "MONTHLY"  };

  /**
   * Allowed values for the <code>reportStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ReportStatusEnum = {
    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED",
    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",
    /**
     * value: "QUEUED"
     * @const
     */
    "QUEUED": "QUEUED",
    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",
    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",
    /**
     * value: "NO_DATA"
     * @const
     */
    "NO_DATA": "NO_DATA",
    /**
     * value: "RERUN"
     * @const
     */
    "RERUN": "RERUN"  };


  return exports;
}));


